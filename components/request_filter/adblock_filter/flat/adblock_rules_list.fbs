// Copyright (c) 2019 Vivaldi Technologies AS. All rights reserved

namespace adblock_filter.flat;

enum Decision : ubyte {
  MODIFY,
  PASS,
  MODIFY_IMPORTANT,
}

enum Modifier : ubyte {
  NO_MODIFIER,
  REDIRECT,
  CSP,
  AD_QUERY_TRIGGER
}

enum PatternType : ubyte {
  PLAIN,
  WILDCARDED,
  REGEXP,
}

enum AnchorType : ubyte (bit_flags) {
  START,
  END,
  HOST,
}

enum OptionFlag : ubyte (bit_flags) {
  MODIFY_BLOCK,
  IS_CASE_SENSITIVE,
  FIRST_PARTY,
  THIRD_PARTY,
}

// The options controlling whether or not to activate filtering for subresources
// of documents that match the URL pattern of the rule.
enum ActivationType : ubyte (bit_flags) {
  DOCUMENT,       // Disable all rules on the page.
  ELEMENT_HIDE,   // Disable all element hiding rules on the page.
  GENERIC_HIDE,   // Disable generic hiding rules on the page.
  GENERIC_BLOCK,  // Disable generic blocking rules on the page.
  ATTRIBUTE_ADS,  // Allow attribution of ads clicked on the page.
}

// The types of resource requests that a URL rule should be applied to.
enum ResourceType : ushort (bit_flags) {
  STYLESHEET,
  IMAGE,
  OBJECT,
  SCRIPT,
  XMLHTTPREQUEST,
  DOCUMENT,
  SUBDOCUMENT,
  FONT,
  MEDIA,
  WEBSOCKET,
  WEBRTC,
  PING,
  WEBTRANSPORT,
  WEBBUNDLE,
  OTHER,
  POPUP,
}

table RequestFilterRule {
  // The decision associated with the pattern.
  decision : Decision = MODIFY;

  // Rule matching options, a bitmask consisting of OptionFlags.
  options : ubyte;

  // A bitmask of ResourceType. Rules most commonly have all types set.
  resource_types : ushort = 16383;

  // A bitmask of ActivationType. Most rules have none set.
  activation_types : ubyte = 0;

  // Use PLAIN as default, since it's the most used pattern type.
  pattern_type : PatternType = PLAIN;

  // Most rules are not anchored.
  anchor_type : ubyte = 0;

  // Limits the pattern to only activate if the host part of the request matches
  // or is a subdomain of the given host.
  host : string;

  ad_domains_and_query_triggers: [string];

  // The list of origin domains to be included/excluded from the filter's
  // affected set. Should either be null or have at least a single element. The
  // domains should be in lower-case and must consist of only ascii
  // characters. Punycode encoding is used for internationalized domains.
  domains_included : [string];
  domains_excluded : [string];

  // Redirect or CSP rules
  modifier : Modifier = NO_MODIFIER;
  modifier_values : [string];

  // A URL pattern in the format defined by |pattern_type|.  This should
  // only consist of ascii characters, since it's matched against a url where
  // the host is encoded in the punycode format (in case of internationalized
  // domains) and any other non-ascii characters are percent-escaped in utf-8.
  // This should be in lower case if the rule is case-insensitive.
  pattern : string;

  // For regular expression pattern types, this sets a string that is safe to
  // use for ngram extraction. It contains only string pieces that a url must
  // match to match the full regex, separated by wildcards
  ngram_search_string : string;
}

table ContentInjectionRuleCore {
  is_allow_rule: bool = false;

  domains_included: [string];
  domains_excluded: [string];
}

table CosmeticRule {
  core: ContentInjectionRuleCore;
  selector: string;
}

table ScriptletInjectionRule {
  core: ContentInjectionRuleCore;
  scriptlet_name: string;
  // abp snippets only requires one "argument". uBO scriptlets can have
  // multiple
  arguments: [string];
}

table RulesList {
  request_filter_rules_list: [RequestFilterRule];
  cosmetic_rules_list: [CosmeticRule];
  scriptlet_injection_rules_list: [ScriptletInjectionRule];
}

root_type RulesList;