// Copyright 2023 The Chromium Authors
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

syntax = "proto3";

package optimization_guide.proto;

import "components/optimization_guide/proto/features/common_quality_data.proto";

option optimize_for = LITE_RUNTIME;
option java_package = "org.chromium.components.optimization_guide.features.proto";

option java_outer_classname = "ComposeProto";

// DO NOT EDIT THIS FILE DIRECTLY!
//
// This file is generated in g3 and then synced to Chrome. Instead, please
// refer to http://go/chrome-intelligence-feature-protos (Google-internal link),
// and then changes will be synced with Chrome automatically.

message ComposeLoggingData {
  ComposeRequest request = 1;

  ComposeResponse response = 2;

  ComposeQuality quality = 3;
}

// Stores all data associated with a single call to the model execution run for
// compose.
//
// Next ID: 9
message ComposeRequest {
  oneof request_params {
    GenerateParams generate_params = 7;

    RewriteParams rewrite_params = 8;
  }

  // Contains information scraped from the page.
  ComposePageMetadata page_metadata = 3;

  // Next ID: 2
  message GenerateParams {
    // User written input text.
    string user_input = 1;
  }

  // Next ID: 5
  message RewriteParams {
    // Rewrite with one of the below modifiers.
    oneof modifier {
      ComposeTone tone = 2;

      ComposeLength length = 3;

      bool regenerate = 4;
    }

    // A previously received ComposeResponse response_text, which will be
    // rewritten.
    string previous_response = 1;
  }

  reserved 1, 2, 4, 5, 6;
}

// Stores the metadata associated with a single call to the model execution.
// This excludes any explicit user input.
// Next Id: 7
message ComposePageMetadata {
  // URL of the page the input field is on.
  string page_url = 1;

  // The title of the page the input field is on.
  string page_title = 2;

  // The innerText of the page the input field is on. This is temporary. We do
  // not intend to send inner text in the long run.
  string page_inner_text = 3;

  // The offset into the inner text of the selected input field.
  uint64 page_inner_text_offset = 4;

  // A trimmed innerText of the page the input field is on, to be used by
  // on device models.
  string trimmed_page_inner_text = 5;

  // An accessibility tree snapshot of the page.
  optional ComposeAXTreeUpdate ax_tree_update = 6;
}

// Accessibility tree snapshot
// See
// https://source.chromium.org/chromium/chromium/src/+/main:ui/accessibility/ax_tree_update.h
// for details of this and related messages.
//
// Next ID: 4
message ComposeAXTreeUpdate {
  optional ComposeAXTreeData tree_data = 1;

  uint32 root_id = 2;

  repeated ComposeAXNodeData nodes = 3;
}

// AX tree metadata, part of the a11y snapshot.
// Next ID: 16
message ComposeAXTreeData {
  string doctype = 1;

  bool loaded = 2;

  float loading_progress = 3;

  string mimetype = 4;

  string title = 5;

  uint32 focus_id = 6;

  bool sel_is_backward = 7;

  uint32 sel_anchor_object_id = 8;

  uint32 sel_anchor_offset = 9;

  ComposeAXTextAffinity sel_anchor_affinity = 10;

  uint32 sel_focus_object_id = 11;

  uint32 sel_focus_offset = 12;

  ComposeAXTextAffinity sel_focus_affinity = 13;

  uint32 root_scroller_id = 14;

  repeated string metadata = 15;
}

// Per node accessibility data, part of the a11y snapshot.
// Next ID: 8
message ComposeAXNodeData {
  uint32 id = 1;

  ComposeAXRole role = 2;

  uint32 state = 3;

  uint64 actions = 4;

  repeated ComposeAXAttribute attributes = 5;

  repeated int32 child_ids = 6;

  ComposeAXRelativeBounds relative_bounds = 7;
}

// AX node attribute, part of the a11y snapshot.
// Next ID: 15
message ComposeAXAttribute {
  oneof attribute_key {
    ComposeAXStringAttribute string_type = 1;

    ComposeAXIntAttribute int_type = 2;

    ComposeAXFloatAttribute float_type = 3;

    ComposeAXBoolAttribute bool_type = 4;

    ComposeAXIntListAttribute intlist_type = 5;

    ComposeAXStringListAttribute stringlist_type = 6;

    string html_attribute_name = 7;
  }

  oneof attribute_value {
    string string_value = 8;

    int32 int_value = 9;

    float float_value = 10;

    bool bool_value = 11;

    ComposeAXIntList int_list_value = 12;

    ComposeAXStringList string_list_value = 13;

    string html_attribute_value = 14;
  }
}

// Helper message for AX IntList.
message ComposeAXIntList {
  repeated int32 value = 1;
}

// Helper message for AX StringList.
message ComposeAXStringList {
  repeated string value = 1;
}

// AX Relative bounds.
// Next ID: 7
message ComposeAXRelativeBounds {
  int32 offset_container_id = 1;

  float x = 2;

  float y = 3;

  float width = 4;

  float height = 5;

  // If present, represents the transform as 16 floats.
  repeated float transform = 6;
}

// Stores the response text from the model execution run.
// Next Id: 2
message ComposeResponse {
  string output = 1;
}

// Any data collected on the client outside of the model request and response.
// This includes user feedback, and metrics about feature usage.
// Next Id: 10
message ComposeQuality {
  FinalStatus final_status = 1;

  UserFeedback user_feedback = 2;

  // How long the user had to wait before seeing the model response.
  int64 request_latency_ms = 4;

  // How much was the text modified before commit only valid iff
  // final_status = INSERTED
  optional int64 edit_distance = 5;

  // A unique ID for each compose session.
  Int128 session_id = 6;

  // Was this request generated via an edit action.
  bool was_generated_via_edit = 7;

  // The status of this request.
  ClientRequestStatus client_request_status = 8;

  // Was this session started with a proactive nudge UI.
  bool started_with_proactive_nudge = 9;

  reserved 3;
}

// A helper message to store the int64 high and uint64 low bits of an int128
// since protos do not natively handle int128. The underlying value is split
// into a `low` uint64 holding the low bits, and `high` int64 holding the bits
// beyond what an int64 can hold. Can easily create an int128 via
// absl::MakeInt128(high, low) and be created from an int128 using
// absl::Int128Low64() and absl::Int128High64().
// Next ID: 3
message Int128 {
  uint64 high = 1;

  uint64 low = 2;
}

// User selected tone. Here the UNSPECIFIED entry is used to specify the tone is
// unaltered or 'default'.
// Next ID: 3
enum ComposeTone {
  COMPOSE_UNSPECIFIED_TONE = 0;

  COMPOSE_FORMAL = 1;

  COMPOSE_INFORMAL = 2;
}

// User selected length. Here the UNSPECIFIED entry is used to specify the
// tone is unaltered or 'default'.
// Next ID: 3
enum ComposeLength {
  COMPOSE_UNSPECIFIED_LENGTH = 0;

  COMPOSE_SHORTER = 1;

  COMPOSE_LONGER = 2;
}

// Selection text affinity, part of the a11y snapshot.
// Next ID: 3
enum ComposeAXTextAffinity {
  COMPOSE_AX_TEXT_AFFINITY_NONE = 0;

  COMPOSE_AX_TEXT_AFFINITY_DOWNSTREAM = 1;

  COMPOSE_AX_TEXT_AFFINITY_UPSTREAM = 2;
}

// AX Role.
// Next ID: 213
enum ComposeAXRole {
  COMPOSE_AX_ROLE_NONE = 0;

  COMPOSE_AX_ROLE_ABBR = 1;

  COMPOSE_AX_ROLE_ALERT = 2;

  COMPOSE_AX_ROLE_ALERTDIALOG = 3;

  COMPOSE_AX_ROLE_APPLICATION = 4;

  COMPOSE_AX_ROLE_ARTICLE = 5;

  COMPOSE_AX_ROLE_AUDIO = 6;

  COMPOSE_AX_ROLE_BANNER = 7;

  COMPOSE_AX_ROLE_BLOCKQUOTE = 8;

  COMPOSE_AX_ROLE_BUTTON = 9;

  COMPOSE_AX_ROLE_CANVAS = 10;

  COMPOSE_AX_ROLE_CAPTION = 11;

  COMPOSE_AX_ROLE_CARET = 12;

  COMPOSE_AX_ROLE_CELL = 13;

  COMPOSE_AX_ROLE_CHECKBOX = 14;

  COMPOSE_AX_ROLE_CLIENT = 15;

  COMPOSE_AX_ROLE_CODE = 16;

  COMPOSE_AX_ROLE_COLORWELL = 17;

  COMPOSE_AX_ROLE_COLUMN = 18;

  COMPOSE_AX_ROLE_COLUMNHEADER = 19;

  COMPOSE_AX_ROLE_COMBOBOXGROUPING = 20;

  COMPOSE_AX_ROLE_COMBOBOXMENUBUTTON = 21;

  COMPOSE_AX_ROLE_COMPLEMENTARY = 22;

  COMPOSE_AX_ROLE_COMMENT = 23;

  COMPOSE_AX_ROLE_CONTENTDELETION = 24;

  COMPOSE_AX_ROLE_CONTENTINSERTION = 25;

  COMPOSE_AX_ROLE_CONTENTINFO = 26;

  COMPOSE_AX_ROLE_DATE = 27;

  COMPOSE_AX_ROLE_DATETIME = 28;

  COMPOSE_AX_ROLE_DEFINITION = 29;

  COMPOSE_AX_ROLE_DESCRIPTIONLIST = 30;

  COMPOSE_AX_ROLE_DESCRIPTIONLISTDETAILDEPRECATED = 31;

  COMPOSE_AX_ROLE_DESCRIPTIONLISTTERMDEPRECATED = 32;

  COMPOSE_AX_ROLE_DESKTOP = 33;

  COMPOSE_AX_ROLE_DETAILS = 34;

  COMPOSE_AX_ROLE_DIALOG = 35;

  COMPOSE_AX_ROLE_DIRECTORYDEPRECATED = 36;

  COMPOSE_AX_ROLE_DISCLOSURETRIANGLE = 37;

  COMPOSE_AX_ROLE_DOCABSTRACT = 38;

  COMPOSE_AX_ROLE_DOCACKNOWLEDGMENTS = 39;

  COMPOSE_AX_ROLE_DOCAFTERWORD = 40;

  COMPOSE_AX_ROLE_DOCAPPENDIX = 41;

  COMPOSE_AX_ROLE_DOCBACKLINK = 42;

  COMPOSE_AX_ROLE_DOCBIBLIOENTRY = 43;

  COMPOSE_AX_ROLE_DOCBIBLIOGRAPHY = 44;

  COMPOSE_AX_ROLE_DOCBIBLIOREF = 45;

  COMPOSE_AX_ROLE_DOCCHAPTER = 46;

  COMPOSE_AX_ROLE_DOCCOLOPHON = 47;

  COMPOSE_AX_ROLE_DOCCONCLUSION = 48;

  COMPOSE_AX_ROLE_DOCCOVER = 49;

  COMPOSE_AX_ROLE_DOCCREDIT = 50;

  COMPOSE_AX_ROLE_DOCCREDITS = 51;

  COMPOSE_AX_ROLE_DOCDEDICATION = 52;

  COMPOSE_AX_ROLE_DOCENDNOTE = 53;

  COMPOSE_AX_ROLE_DOCENDNOTES = 54;

  COMPOSE_AX_ROLE_DOCEPIGRAPH = 55;

  COMPOSE_AX_ROLE_DOCEPILOGUE = 56;

  COMPOSE_AX_ROLE_DOCERRATA = 57;

  COMPOSE_AX_ROLE_DOCEXAMPLE = 58;

  COMPOSE_AX_ROLE_DOCFOOTNOTE = 59;

  COMPOSE_AX_ROLE_DOCFOREWORD = 60;

  COMPOSE_AX_ROLE_DOCGLOSSARY = 61;

  COMPOSE_AX_ROLE_DOCGLOSSREF = 62;

  COMPOSE_AX_ROLE_DOCINDEX = 63;

  COMPOSE_AX_ROLE_DOCINTRODUCTION = 64;

  COMPOSE_AX_ROLE_DOCNOTEREF = 65;

  COMPOSE_AX_ROLE_DOCNOTICE = 66;

  COMPOSE_AX_ROLE_DOCPAGEBREAK = 67;

  COMPOSE_AX_ROLE_DOCPAGEFOOTER = 68;

  COMPOSE_AX_ROLE_DOCPAGEHEADER = 69;

  COMPOSE_AX_ROLE_DOCPAGELIST = 70;

  COMPOSE_AX_ROLE_DOCPART = 71;

  COMPOSE_AX_ROLE_DOCPREFACE = 72;

  COMPOSE_AX_ROLE_DOCPROLOGUE = 73;

  COMPOSE_AX_ROLE_DOCPULLQUOTE = 74;

  COMPOSE_AX_ROLE_DOCQNA = 75;

  COMPOSE_AX_ROLE_DOCSUBTITLE = 76;

  COMPOSE_AX_ROLE_DOCTIP = 77;

  COMPOSE_AX_ROLE_DOCTOC = 78;

  COMPOSE_AX_ROLE_DOCUMENT = 79;

  COMPOSE_AX_ROLE_EMBEDDEDOBJECT = 80;

  COMPOSE_AX_ROLE_EMPHASIS = 81;

  COMPOSE_AX_ROLE_FEED = 82;

  COMPOSE_AX_ROLE_FIGCAPTION = 83;

  COMPOSE_AX_ROLE_FIGURE = 84;

  COMPOSE_AX_ROLE_FOOTER = 85;

  COMPOSE_AX_ROLE_FOOTERASNONLANDMARK = 86;

  COMPOSE_AX_ROLE_FORM = 87;

  COMPOSE_AX_ROLE_GENERICCONTAINER = 88;

  COMPOSE_AX_ROLE_GRAPHICSDOCUMENT = 89;

  COMPOSE_AX_ROLE_GRAPHICSOBJECT = 90;

  COMPOSE_AX_ROLE_GRAPHICSSYMBOL = 91;

  COMPOSE_AX_ROLE_GRID = 92;

  COMPOSE_AX_ROLE_GROUP = 93;

  COMPOSE_AX_ROLE_HEADER = 94;

  COMPOSE_AX_ROLE_HEADERASNONLANDMARK = 95;

  COMPOSE_AX_ROLE_HEADING = 96;

  COMPOSE_AX_ROLE_IFRAME = 97;

  COMPOSE_AX_ROLE_IFRAMEPRESENTATIONAL = 98;

  COMPOSE_AX_ROLE_IMAGE = 99;

  COMPOSE_AX_ROLE_IMECANDIDATE = 100;

  COMPOSE_AX_ROLE_INLINETEXTBOX = 101;

  COMPOSE_AX_ROLE_INPUTTIME = 102;

  COMPOSE_AX_ROLE_KEYBOARD = 103;

  COMPOSE_AX_ROLE_LABELTEXT = 104;

  COMPOSE_AX_ROLE_LAYOUTTABLE = 105;

  COMPOSE_AX_ROLE_LAYOUTTABLECELL = 106;

  COMPOSE_AX_ROLE_LAYOUTTABLEROW = 107;

  COMPOSE_AX_ROLE_LEGEND = 108;

  COMPOSE_AX_ROLE_LINEBREAK = 109;

  COMPOSE_AX_ROLE_LINK = 110;

  COMPOSE_AX_ROLE_LIST = 111;

  COMPOSE_AX_ROLE_LISTBOX = 112;

  COMPOSE_AX_ROLE_LISTBOXOPTION = 113;

  COMPOSE_AX_ROLE_LISTGRID = 114;

  COMPOSE_AX_ROLE_LISTITEM = 115;

  COMPOSE_AX_ROLE_LISTMARKER = 116;

  COMPOSE_AX_ROLE_LOG = 117;

  COMPOSE_AX_ROLE_MAIN = 118;

  COMPOSE_AX_ROLE_MARK = 119;

  COMPOSE_AX_ROLE_MARQUEE = 120;

  COMPOSE_AX_ROLE_MATH = 121;

  COMPOSE_AX_ROLE_MENU = 122;

  COMPOSE_AX_ROLE_MENUBAR = 123;

  COMPOSE_AX_ROLE_MENUITEM = 124;

  COMPOSE_AX_ROLE_MENUITEMCHECKBOX = 125;

  COMPOSE_AX_ROLE_MENUITEMRADIO = 126;

  COMPOSE_AX_ROLE_MENULISTOPTION = 127;

  COMPOSE_AX_ROLE_MENULISTPOPUP = 128;

  COMPOSE_AX_ROLE_METER = 129;

  COMPOSE_AX_ROLE_NAVIGATION = 130;

  COMPOSE_AX_ROLE_NOTE = 131;

  COMPOSE_AX_ROLE_PANE = 132;

  COMPOSE_AX_ROLE_PARAGRAPH = 133;

  COMPOSE_AX_ROLE_PDFACTIONABLEHIGHLIGHT = 134;

  COMPOSE_AX_ROLE_PDFROOT = 135;

  COMPOSE_AX_ROLE_PLUGINOBJECT = 136;

  COMPOSE_AX_ROLE_POPUPBUTTON = 137;

  COMPOSE_AX_ROLE_PORTALDEPRECATED = 138;

  COMPOSE_AX_ROLE_PREDEPRECATED = 139;

  COMPOSE_AX_ROLE_PROGRESSINDICATOR = 140;

  COMPOSE_AX_ROLE_RADIOBUTTON = 141;

  COMPOSE_AX_ROLE_RADIOGROUP = 142;

  COMPOSE_AX_ROLE_REGION = 143;

  COMPOSE_AX_ROLE_ROOTWEBAREA = 144;

  COMPOSE_AX_ROLE_ROW = 145;

  COMPOSE_AX_ROLE_ROWGROUP = 146;

  COMPOSE_AX_ROLE_ROWHEADER = 147;

  COMPOSE_AX_ROLE_RUBY = 148;

  COMPOSE_AX_ROLE_RUBYANNOTATION = 149;

  COMPOSE_AX_ROLE_SCROLLBAR = 150;

  COMPOSE_AX_ROLE_SCROLLVIEW = 151;

  COMPOSE_AX_ROLE_SEARCH = 152;

  COMPOSE_AX_ROLE_SEARCHBOX = 153;

  COMPOSE_AX_ROLE_SECTION = 154;

  COMPOSE_AX_ROLE_SLIDER = 155;

  COMPOSE_AX_ROLE_SPINBUTTON = 156;

  COMPOSE_AX_ROLE_SPLITTER = 157;

  COMPOSE_AX_ROLE_STATICTEXT = 158;

  COMPOSE_AX_ROLE_STATUS = 159;

  COMPOSE_AX_ROLE_STRONG = 160;

  COMPOSE_AX_ROLE_SUGGESTION = 161;

  COMPOSE_AX_ROLE_SVGROOT = 162;

  COMPOSE_AX_ROLE_SWITCH = 163;

  COMPOSE_AX_ROLE_TAB = 164;

  COMPOSE_AX_ROLE_TABLIST = 165;

  COMPOSE_AX_ROLE_TABPANEL = 166;

  COMPOSE_AX_ROLE_TABLE = 167;

  COMPOSE_AX_ROLE_TABLEHEADERCONTAINER = 168;

  COMPOSE_AX_ROLE_TERM = 169;

  COMPOSE_AX_ROLE_TEXTFIELD = 170;

  COMPOSE_AX_ROLE_TEXTFIELDWITHCOMBOBOX = 171;

  COMPOSE_AX_ROLE_TIME = 172;

  COMPOSE_AX_ROLE_TIMER = 173;

  COMPOSE_AX_ROLE_TITLEBAR = 174;

  COMPOSE_AX_ROLE_TOGGLEBUTTON = 175;

  COMPOSE_AX_ROLE_TOOLBAR = 176;

  COMPOSE_AX_ROLE_TOOLTIP = 177;

  COMPOSE_AX_ROLE_TREE = 178;

  COMPOSE_AX_ROLE_TREEGRID = 179;

  COMPOSE_AX_ROLE_TREEITEM = 180;

  COMPOSE_AX_ROLE_UNKNOWN = 181;

  COMPOSE_AX_ROLE_VIDEO = 182;

  COMPOSE_AX_ROLE_WEBVIEW = 183;

  COMPOSE_AX_ROLE_WINDOW = 184;

  COMPOSE_AX_ROLE_SUBSCRIPT = 185;

  COMPOSE_AX_ROLE_SUPERSCRIPT = 186;

  COMPOSE_AX_ROLE_MATHMLMATH = 187;

  COMPOSE_AX_ROLE_MATHMLFRACTION = 188;

  COMPOSE_AX_ROLE_MATHMLIDENTIFIER = 189;

  COMPOSE_AX_ROLE_MATHMLMULTISCRIPTS = 190;

  COMPOSE_AX_ROLE_MATHMLNONESCRIPT = 191;

  COMPOSE_AX_ROLE_MATHMLNUMBER = 192;

  COMPOSE_AX_ROLE_MATHMLOPERATOR = 193;

  COMPOSE_AX_ROLE_MATHMLOVER = 194;

  COMPOSE_AX_ROLE_MATHMLPRESCRIPTDELIMITER = 195;

  COMPOSE_AX_ROLE_MATHMLROOT = 196;

  COMPOSE_AX_ROLE_MATHMLROW = 197;

  COMPOSE_AX_ROLE_MATHMLSQUAREROOT = 198;

  COMPOSE_AX_ROLE_MATHMLSTRINGLITERAL = 199;

  COMPOSE_AX_ROLE_MATHMLSUB = 200;

  COMPOSE_AX_ROLE_MATHMLSUBSUP = 201;

  COMPOSE_AX_ROLE_MATHMLSUP = 202;

  COMPOSE_AX_ROLE_MATHMLTABLE = 203;

  COMPOSE_AX_ROLE_MATHMLTABLECELL = 204;

  COMPOSE_AX_ROLE_MATHMLTABLEROW = 205;

  COMPOSE_AX_ROLE_MATHMLTEXT = 206;

  COMPOSE_AX_ROLE_MATHMLUNDER = 207;

  COMPOSE_AX_ROLE_MATHMLUNDEROVER = 208;

  COMPOSE_AX_ROLE_COMBOBOXSELECT = 209;

  COMPOSE_AX_ROLE_DISCLOSURETRIANGLEGROUPED = 210;

  COMPOSE_AX_ROLE_SECTIONWITHOUTNAME = 211;

  COMPOSE_AX_ROLE_GRIDCELL = 212;
}

// AX String attribute enum.
// Next ID: 41
enum ComposeAXStringAttribute {
  COMPOSE_AX_SA_NONE = 0;

  COMPOSE_AX_SA_ACCESSKEY = 1;

  COMPOSE_AX_SA_APPID = 2;

  COMPOSE_AX_SA_ARIAINVALIDVALUEDEPRECATED = 3;

  COMPOSE_AX_SA_AUTOCOMPLETE = 4;

  COMPOSE_AX_SA_CHECKEDSTATEDESCRIPTION = 5;

  COMPOSE_AX_SA_CHILDTREEID = 6;

  COMPOSE_AX_SA_CHILDTREENODEAPPID = 7;

  COMPOSE_AX_SA_CLASSNAME = 8;

  COMPOSE_AX_SA_CONTAINERLIVERELEVANT = 9;

  COMPOSE_AX_SA_CONTAINERLIVESTATUS = 10;

  COMPOSE_AX_SA_DESCRIPTION = 11;

  COMPOSE_AX_SA_DISPLAY = 12;

  COMPOSE_AX_SA_FONTFAMILY = 13;

  COMPOSE_AX_SA_HTMLTAG = 14;

  COMPOSE_AX_SA_IMAGEANNOTATION = 15;

  COMPOSE_AX_SA_IMAGEDATAURL = 16;

  COMPOSE_AX_SA_INNERHTML = 17;

  COMPOSE_AX_SA_INPUTTYPE = 18;

  COMPOSE_AX_SA_KEYSHORTCUTS = 19;

  COMPOSE_AX_SA_LANGUAGE = 20;

  COMPOSE_AX_SA_NAME = 21;

  COMPOSE_AX_SA_LIVERELEVANT = 22;

  COMPOSE_AX_SA_LIVESTATUS = 23;

  COMPOSE_AX_SA_PLACEHOLDER = 24;

  COMPOSE_AX_SA_ROLE = 25;

  COMPOSE_AX_SA_ROLEDESCRIPTION = 26;

  COMPOSE_AX_SA_TOOLTIP = 27;

  COMPOSE_AX_SA_URL = 28;

  COMPOSE_AX_SA_VALUE = 29;

  COMPOSE_AX_SA_VIRTUALCONTENT = 30;

  COMPOSE_AX_SA_DODEFAULTLABEL = 31;

  COMPOSE_AX_SA_LONGCLICKLABEL = 32;

  COMPOSE_AX_SA_ARIABRAILLELABEL = 33;

  COMPOSE_AX_SA_ARIABRAILLEROLEDESCRIPTION = 34;

  COMPOSE_AX_SA_LINKTARGET = 35;

  COMPOSE_AX_SA_ARIANOTIFICATIONANNOUNCEMENTDEPRECATED = 36;

  COMPOSE_AX_SA_ARIANOTIFICATIONIDDEPRECATED = 37;

  COMPOSE_AX_SA_HTMLID = 38;

  COMPOSE_AX_SA_ARIACELLCOLUMNINDEXTEXT = 39;

  COMPOSE_AX_SA_ARIACELLROWINDEXTEXT = 40;
}

// AX Int attribute enum.
// Next ID: 66
enum ComposeAXIntAttribute {
  COMPOSE_AX_IA_NONE = 0;

  COMPOSE_AX_IA_DEFAULTACTIONVERB = 1;

  COMPOSE_AX_IA_SCROLLX = 2;

  COMPOSE_AX_IA_SCROLLXMIN = 3;

  COMPOSE_AX_IA_SCROLLXMAX = 4;

  COMPOSE_AX_IA_SCROLLY = 5;

  COMPOSE_AX_IA_SCROLLYMIN = 6;

  COMPOSE_AX_IA_SCROLLYMAX = 7;

  COMPOSE_AX_IA_TEXTSELSTART = 8;

  COMPOSE_AX_IA_TEXTSELEND = 9;

  COMPOSE_AX_IA_ARIACOLUMNCOUNT = 10;

  COMPOSE_AX_IA_ARIACELLCOLUMNINDEX = 11;

  COMPOSE_AX_IA_ARIACELLCOLUMNSPAN = 12;

  COMPOSE_AX_IA_ARIAROWCOUNT = 13;

  COMPOSE_AX_IA_ARIACELLROWINDEX = 14;

  COMPOSE_AX_IA_ARIACELLROWSPAN = 15;

  COMPOSE_AX_IA_TABLEROWCOUNT = 16;

  COMPOSE_AX_IA_TABLECOLUMNCOUNT = 17;

  COMPOSE_AX_IA_TABLEHEADERID = 18;

  COMPOSE_AX_IA_TABLEROWINDEX = 19;

  COMPOSE_AX_IA_TABLEROWHEADERID = 20;

  COMPOSE_AX_IA_TABLECOLUMNINDEX = 21;

  COMPOSE_AX_IA_TABLECOLUMNHEADERID = 22;

  COMPOSE_AX_IA_TABLECELLCOLUMNINDEX = 23;

  COMPOSE_AX_IA_TABLECELLCOLUMNSPAN = 24;

  COMPOSE_AX_IA_TABLECELLROWINDEX = 25;

  COMPOSE_AX_IA_TABLECELLROWSPAN = 26;

  COMPOSE_AX_IA_SORTDIRECTION = 27;

  COMPOSE_AX_IA_HIERARCHICALLEVEL = 28;

  COMPOSE_AX_IA_NAMEFROM = 29;

  COMPOSE_AX_IA_DESCRIPTIONFROM = 30;

  COMPOSE_AX_IA_ACTIVEDESCENDANTID = 31;

  COMPOSE_AX_IA_ERRORMESSAGEIDDEPRECATED = 32;

  COMPOSE_AX_IA_INPAGELINKTARGETID = 33;

  COMPOSE_AX_IA_MEMBEROFID = 34;

  COMPOSE_AX_IA_NEXTONLINEID = 35;

  COMPOSE_AX_IA_POPUPFORID = 36;

  COMPOSE_AX_IA_PREVIOUSONLINEID = 37;

  COMPOSE_AX_IA_RESTRICTION = 38;

  COMPOSE_AX_IA_SETSIZE = 39;

  COMPOSE_AX_IA_POSINSET = 40;

  COMPOSE_AX_IA_COLORVALUE = 41;

  COMPOSE_AX_IA_ARIACURRENTSTATE = 42;

  COMPOSE_AX_IA_BACKGROUNDCOLOR = 43;

  COMPOSE_AX_IA_COLOR = 44;

  COMPOSE_AX_IA_HASPOPUP = 45;

  COMPOSE_AX_IA_IMAGEANNOTATIONSTATUS = 46;

  COMPOSE_AX_IA_INVALIDSTATE = 47;

  COMPOSE_AX_IA_CHECKEDSTATE = 48;

  COMPOSE_AX_IA_LISTSTYLE = 49;

  COMPOSE_AX_IA_TEXTALIGN = 50;

  COMPOSE_AX_IA_TEXTDIRECTION = 51;

  COMPOSE_AX_IA_TEXTPOSITION = 52;

  COMPOSE_AX_IA_TEXTSTYLE = 53;

  COMPOSE_AX_IA_TEXTOVERLINESTYLE = 54;

  COMPOSE_AX_IA_TEXTSTRIKETHROUGHSTYLE = 55;

  COMPOSE_AX_IA_TEXTUNDERLINESTYLE = 56;

  COMPOSE_AX_IA_PREVIOUSFOCUSID = 57;

  COMPOSE_AX_IA_NEXTFOCUSID = 58;

  COMPOSE_AX_IA_DROPEFFECTDEPRECATED = 59;

  COMPOSE_AX_IA_DOMNODEID = 60;

  COMPOSE_AX_IA_ISPOPUP = 61;

  COMPOSE_AX_IA_NEXTWINDOWFOCUSID = 62;

  COMPOSE_AX_IA_PREVIOUSWINDOWFOCUSID = 63;

  COMPOSE_AX_IA_ARIANOTIFICATIONINTERRUPTDEPRECATED = 64;

  COMPOSE_AX_IA_ARIANOTIFICATIONPRIORITYDEPRECATED = 65;
}

// AX Float attribute enum.
// Next ID: 9
enum ComposeAXFloatAttribute {
  COMPOSE_AX_FA_NONE = 0;

  COMPOSE_AX_FA_VALUEFORRANGE = 1;

  COMPOSE_AX_FA_MINVALUEFORRANGE = 2;

  COMPOSE_AX_FA_MAXVALUEFORRANGE = 3;

  COMPOSE_AX_FA_STEPVALUEFORRANGE = 4;

  COMPOSE_AX_FA_FONTSIZE = 5;

  COMPOSE_AX_FA_FONTWEIGHT = 6;

  COMPOSE_AX_FA_TEXTINDENT = 7;

  COMPOSE_AX_FA_CHILDTREESCALE = 8;
}

// AX Bool attribute enum.
// Next ID: 23
enum ComposeAXBoolAttribute {
  COMPOSE_AX_BA_NONE = 0;

  COMPOSE_AX_BA_BUSY = 1;

  COMPOSE_AX_BA_NONATOMICTEXTFIELDROOT = 2;

  COMPOSE_AX_BA_CONTAINERLIVEATOMIC = 3;

  COMPOSE_AX_BA_CONTAINERLIVEBUSY = 4;

  COMPOSE_AX_BA_LIVEATOMIC = 5;

  COMPOSE_AX_BA_MODAL = 6;

  COMPOSE_AX_BA_UPDATELOCATIONONLY = 7;

  COMPOSE_AX_BA_CANVASHASFALLBACK = 8;

  COMPOSE_AX_BA_SCROLLABLE = 9;

  COMPOSE_AX_BA_CLICKABLE = 10;

  COMPOSE_AX_BA_CLIPSCHILDREN = 11;

  COMPOSE_AX_BA_NOTUSERSELECTABLESTYLE = 12;

  COMPOSE_AX_BA_SELECTED = 13;

  COMPOSE_AX_BA_SELECTEDFROMFOCUS = 14;

  COMPOSE_AX_BA_SUPPORTSTEXTLOCATION = 15;

  COMPOSE_AX_BA_GRABBEDDEPRECATED = 16;

  COMPOSE_AX_BA_ISLINEBREAKINGOBJECT = 17;

  COMPOSE_AX_BA_ISPAGEBREAKINGOBJECT = 18;

  COMPOSE_AX_BA_HASARIAATTRIBUTE = 19;

  COMPOSE_AX_BA_TOUCHPASSTHROUGHDEPRECATED = 20;

  COMPOSE_AX_BA_LONGCLICKABLE = 21;

  COMPOSE_AX_BA_HASHIDDENOFFSCREENNODES = 22;
}

// AX IntList attribute enum.
// Next ID: 29
enum ComposeAXIntListAttribute {
  COMPOSE_AX_ILA_NONE = 0;

  COMPOSE_AX_ILA_INDIRECTCHILDIDS = 1;

  COMPOSE_AX_ILA_CONTROLSIDS = 2;

  COMPOSE_AX_ILA_DETAILSIDS = 3;

  COMPOSE_AX_ILA_DESCRIBEDBYIDS = 4;

  COMPOSE_AX_ILA_FLOWTOIDS = 5;

  COMPOSE_AX_ILA_LABELLEDBYIDS = 6;

  COMPOSE_AX_ILA_RADIOGROUPIDS = 7;

  COMPOSE_AX_ILA_MARKERTYPES = 8;

  COMPOSE_AX_ILA_MARKERSTARTS = 9;

  COMPOSE_AX_ILA_MARKERENDS = 10;

  COMPOSE_AX_ILA_CHARACTEROFFSETS = 11;

  COMPOSE_AX_ILA_LINESTARTS = 12;

  COMPOSE_AX_ILA_WORDSTARTS = 13;

  COMPOSE_AX_ILA_WORDENDS = 14;

  COMPOSE_AX_ILA_CUSTOMACTIONIDS = 15;

  COMPOSE_AX_ILA_CARETBOUNDS = 16;

  COMPOSE_AX_ILA_LINEENDS = 17;

  COMPOSE_AX_ILA_SENTENCESTARTS = 18;

  COMPOSE_AX_ILA_SENTENCEENDS = 19;

  COMPOSE_AX_ILA_HIGHLIGHTTYPES = 20;

  COMPOSE_AX_ILA_TEXTOPERATIONSTARTANCHORIDS = 21;

  COMPOSE_AX_ILA_TEXTOPERATIONSTARTOFFSETS = 22;

  COMPOSE_AX_ILA_TEXTOPERATIONENDANCHORIDS = 23;

  COMPOSE_AX_ILA_TEXTOPERATIONENDOFFSETS = 24;

  COMPOSE_AX_ILA_TEXTOPERATIONS = 25;

  COMPOSE_AX_ILA_ERRORMESSAGEIDS = 26;

  COMPOSE_AX_ILA_ARIANOTIFICATIONINTERRUPTPROPERTIES = 27;

  COMPOSE_AX_ILA_ARIANOTIFICATIONPRIORITYPROPERTIES = 28;
}

// AX StringList attribute enum.
// Next ID: 4
enum ComposeAXStringListAttribute {
  COMPOSE_AX_SLA_NONE = 0;

  COMPOSE_AX_SLA_CUSTOMACTIONDESCRIPTIONS = 1;

  COMPOSE_AX_SLA_ARIANOTIFICATIONANNOUNCEMENTS = 2;

  COMPOSE_AX_SLA_ARIANOTIFICATIONIDS = 3;
}

// The final status of the feature.
// Next ID: 4
enum FinalStatus {
  // The dialog was not closed, and a subsequent model request should be
  // logged.
  STATUS_UNSPECIFIED = 0;

  // The user inserted this response into the page.
  STATUS_INSERTED = 1;

  // User pressed 'X' or started a new session with a selection.
  STATUS_ABANDONED = 2;

  // This case includes: close tab, navigation, etc.
  // Used after M124.
  STATUS_FINISHED_WITHOUT_INSERT = 3;
}

// Status code used in compose responses.
// Next ID: 17
enum ClientRequestStatus {
  CLIENT_REQUEST_STATUS_UNSPECIFIED = 0;

  CLIENT_REQUEST_STATUS_OK = 1;

  // Generic client error, not specified.
  CLIENT_REQUEST_STATUS_CLIENT_ERROR = 2;

  // If the feature is somehow disabled.
  CLIENT_REQUEST_STATUS_MISCONFIGURATION = 3;

  // If permission is denied (e.g. user is not logged in.)
  CLIENT_REQUEST_STATUS_PERMISSION_DENIED = 4;

  // Generic server error, not specified.
  CLIENT_REQUEST_STATUS_SERVER_ERROR = 5;

  // Invalid request sent, likely a client issue where ComposeRequest is
  // incorrect.
  CLIENT_REQUEST_STATUS_INVALID_REQUEST = 6;

  // Request was throttled.
  CLIENT_REQUEST_STATUS_REQUEST_THROTTLED = 7;

  // Retryable error occurred in the server.
  CLIENT_REQUEST_STATUS_RETRYABLE_ERROR = 8;

  // Non-retryable error occurred in the server (eg. server down).
  CLIENT_REQUEST_STATUS_NON_RETRYABLE_ERROR = 9;

  // Unsupported language used.
  CLIENT_REQUEST_STATUS_UNSUPPORTED_LANGUAGE = 10;

  // Request was filtered (eg. due to T&S).
  CLIENT_REQUEST_STATUS_FILTERED = 11;

  // Compose service was disabled.
  CLIENT_REQUEST_STATUS_DISABLED = 12;

  // Request was cancelled.
  CLIENT_REQUEST_STATUS_CANCELLED = 13;

  // No response received from the server.
  CLIENT_REQUEST_STATUS_NO_RESPONSE = 14;

  // If the user is offline.
  CLIENT_REQUEST_STATUS_OFFLINE = 15;

  // The request timed out.
  CLIENT_REQUEST_STATUS_REQUEST_TIMED_OUT = 16;
}
