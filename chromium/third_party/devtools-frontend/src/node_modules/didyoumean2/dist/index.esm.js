import e from"leven";import t from"lodash.deburr";let r,s;!function(e){e.ALL_CLOSEST_MATCHES="all-closest-matches",e.ALL_MATCHES="all-matches",e.ALL_SORTED_MATCHES="all-sorted-matches",e.FIRST_CLOSEST_MATCH="first-closest-match",e.FIRST_MATCH="first-match"}(r||(r={})),function(e){e.EDIT_DISTANCE="edit-distance",e.SIMILARITY="similarity"}(s||(s={}));const c=new Error("unknown returnType"),o=new Error("unknown thresholdType"),a=(e,r)=>{let s=e;return r.trimSpaces&&(s=s.trim().replace(/\s+/g," ")),r.deburr&&(s=t(s)),r.caseSensitive||(s=s.toLowerCase()),s},n=(e,t)=>{const{matchPath:r}=t,s=((e,t)=>{const r=Array.isArray(t)&&t.length?t.reduce((e,t)=>null==e?void 0:e[t],e):e;return"string"!=typeof r?"":r})(e,r);return a(s,t)};export default function(t,T,h){const l=(e=>{const t={caseSensitive:!1,deburr:!0,matchPath:[],returnType:r.FIRST_CLOSEST_MATCH,thresholdType:s.SIMILARITY,trimSpaces:!0,...e};switch(t.thresholdType){case s.EDIT_DISTANCE:return{threshold:20,...t};case s.SIMILARITY:return{threshold:.4,...t};default:throw o}})(h),{returnType:S,threshold:u,thresholdType:A}=l,I=a(t,l);let i,L;switch(A){case s.EDIT_DISTANCE:i=e=>e<=u,L=t=>e(I,n(t,l));break;case s.SIMILARITY:i=e=>e>=u,L=t=>((t,r)=>{if(!t||!r)return 0;if(t===r)return 1;const s=e(t,r),c=Math.max(t.length,r.length);return(c-s)/c})(I,n(t,l));break;default:throw o}const E=[],_=T.length;switch(S){case r.ALL_CLOSEST_MATCHES:case r.FIRST_CLOSEST_MATCH:{const e=[];let t;switch(A){case s.EDIT_DISTANCE:t=1/0;for(let r=0;r<_;r+=1){const s=L(T[r]);t>s&&(t=s),e.push(s)}break;case s.SIMILARITY:t=0;for(let r=0;r<_;r+=1){const s=L(T[r]);t<s&&(t=s),e.push(s)}break;default:throw o}const r=e.length;for(let s=0;s<r;s+=1){const r=e[s];i(r)&&r===t&&E.push(s)}break}case r.ALL_MATCHES:for(let e=0;e<_;e+=1){i(L(T[e]))&&E.push(e)}break;case r.ALL_SORTED_MATCHES:{const e=[];for(let t=0;t<_;t+=1){const r=L(T[t]);i(r)&&e.push({score:r,index:t})}switch(A){case s.EDIT_DISTANCE:e.sort((e,t)=>e.score-t.score);break;case s.SIMILARITY:e.sort((e,t)=>t.score-e.score);break;default:throw o}for(const t of e)E.push(t.index);break}case r.FIRST_MATCH:for(let e=0;e<_;e+=1){if(i(L(T[e]))){E.push(e);break}}break;default:throw c}return((e,t,s)=>{switch(s){case r.ALL_CLOSEST_MATCHES:case r.ALL_MATCHES:case r.ALL_SORTED_MATCHES:return t.map(t=>e[t]);case r.FIRST_CLOSEST_MATCH:case r.FIRST_MATCH:return t.length?e[t[0]]:null;default:return null}})(T,E,S)}export{r as ReturnTypeEnums,s as ThresholdTypeEnums};
//# sourceMappingURL=index.esm.js.map
