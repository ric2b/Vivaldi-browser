# Copyright 2018 The Chromium Authors
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build_overrides/build.gni")

if (build_with_chromium) {
  source_set("abseil") {
    public_deps = [ "//third_party/abseil-cpp:absl" ]
  }
} else {
  config("abseil_config") {
    include_dirs = [ "//third_party/abseil/src" ]

    if (is_clang) {
      cflags = [
        # TODO(crbug.com/1343975) Evaluate and possibly enable.
        "-Wno-deprecated-builtins",
      ]

      if (is_win) {
        cflags += [ "-Wno-shadow" ]
      }
    }
  }

  config("private_abseil_config") {
    cflags = [
      "-Wno-sign-compare",
      "-Wno-extra-semi",
      "-Wno-range-loop-analysis",
      "-Wno-array-parameter",
    ]

    if (target_cpu == "arm" || target_cpu == "arm64") {
      cflags += [ "-Wno-implicit-int-float-conversion" ]
    }
  }

  source_set("internal") {
    sources = [
      "src/absl/base/internal/atomic_hook.h",
      "src/absl/base/internal/identity.h",
      "src/absl/base/internal/inline_variable.h",
      "src/absl/base/internal/invoke.h",
      "src/absl/base/internal/raw_logging.cc",
      "src/absl/base/internal/raw_logging.h",
      "src/absl/base/internal/throw_delegate.cc",
      "src/absl/base/internal/throw_delegate.h",
      "src/absl/container/internal/common.h",
      "src/absl/hash/internal/city.cc",
      "src/absl/hash/internal/city.h",
      "src/absl/hash/internal/hash.cc",
      "src/absl/hash/internal/hash.h",
      "src/absl/hash/internal/low_level_hash.cc",
      "src/absl/hash/internal/low_level_hash.h",
      "src/absl/hash/internal/spy_hash_state.h",
      "src/absl/strings/internal/charconv_bigint.cc",
      "src/absl/strings/internal/charconv_bigint.h",
      "src/absl/strings/internal/charconv_parse.cc",
      "src/absl/strings/internal/charconv_parse.h",
      "src/absl/strings/internal/escaping.cc",
      "src/absl/strings/internal/escaping.h",
      "src/absl/strings/internal/memutil.cc",
      "src/absl/strings/internal/memutil.h",
      "src/absl/strings/internal/str_join_internal.h",
      "src/absl/strings/internal/utf8.cc",
      "src/absl/strings/internal/utf8.h",
    ]
    configs += [ ":private_abseil_config" ]
    public_configs = [ ":abseil_config" ]
  }

  # NOTE: StrFormat is specifically excluded from the Abseil source set due
  # to binary size concerns.
  source_set("abseil") {
    sources = [
      "src/absl/base/log_severity.h",
      "src/absl/base/macros.h",
      "src/absl/base/optimization.h",
      "src/absl/base/policy_checks.h",
      "src/absl/base/port.h",
      "src/absl/hash/hash.h",
      "src/absl/hash/hash_testing.h",
      "src/absl/memory/memory.h",
      "src/absl/meta/type_traits.h",
      "src/absl/numeric/int128.cc",
      "src/absl/numeric/int128.h",
      "src/absl/strings/ascii.cc",
      "src/absl/strings/ascii.h",
      "src/absl/strings/charconv.cc",
      "src/absl/strings/charconv.h",
      "src/absl/strings/escaping.cc",
      "src/absl/strings/escaping.h",
      "src/absl/strings/match.cc",
      "src/absl/strings/match.h",
      "src/absl/strings/numbers.cc",
      "src/absl/strings/numbers.h",
      "src/absl/strings/str_cat.cc",
      "src/absl/strings/str_cat.h",
      "src/absl/strings/str_join.h",
      "src/absl/strings/str_replace.cc",
      "src/absl/strings/str_replace.h",
      "src/absl/strings/str_split.cc",
      "src/absl/strings/str_split.h",
      "src/absl/strings/substitute.cc",
      "src/absl/strings/substitute.h",
      "src/absl/types/bad_optional_access.cc",
      "src/absl/types/bad_optional_access.h",
      "src/absl/types/bad_variant_access.cc",
      "src/absl/types/bad_variant_access.h",
      "src/absl/types/variant.h",
    ]

    configs += [ ":private_abseil_config" ]
    public_configs = [ ":abseil_config" ]
    public_deps = [ ":internal" ]
  }

  config("private_abseil_quiche_config") {
    cflags = [
      "-Wno-implicit-int-float-conversion",
      "-Wno-unreachable-code-break",
    ]

    cflags_cc = [ "-Wno-exit-time-destructors" ]
  }

  source_set("abseil_quiche_internal") {
    sources = [
      "src/absl/base/internal/cycleclock.cc",
      "src/absl/base/internal/cycleclock.h",
      "src/absl/base/internal/low_level_alloc.cc",
      "src/absl/base/internal/low_level_alloc.h",
      "src/absl/base/internal/spinlock.cc",
      "src/absl/base/internal/spinlock.h",
      "src/absl/base/internal/spinlock_wait.cc",
      "src/absl/base/internal/spinlock_wait.h",
      "src/absl/base/internal/strerror.cc",
      "src/absl/base/internal/strerror.h",
      "src/absl/base/internal/sysinfo.cc",
      "src/absl/base/internal/sysinfo.h",
      "src/absl/base/internal/thread_identity.cc",
      "src/absl/base/internal/thread_identity.h",
      "src/absl/base/internal/unscaledcycleclock.cc",
      "src/absl/base/internal/unscaledcycleclock.h",
      "src/absl/container/internal/raw_hash_set.cc",
      "src/absl/container/internal/raw_hash_set.h",
      "src/absl/crc/internal/cpu_detect.cc",
      "src/absl/crc/internal/cpu_detect.h",
      "src/absl/crc/internal/crc.cc",
      "src/absl/crc/internal/crc.h",
      "src/absl/crc/internal/crc.h",
      "src/absl/crc/internal/crc_cord_state.cc",
      "src/absl/crc/internal/crc_cord_state.h",
      "src/absl/crc/internal/crc_internal.h",
      "src/absl/crc/internal/crc_memcpy.h",
      "src/absl/crc/internal/crc_memcpy_fallback.cc",
      "src/absl/crc/internal/crc_memcpy_x86_arm_combined.cc",
      "src/absl/crc/internal/crc_non_temporal_memcpy.cc",
      "src/absl/crc/internal/crc_x86_arm_combined.cc",
      "src/absl/debugging/internal/address_is_readable.cc",
      "src/absl/debugging/internal/address_is_readable.h",
      "src/absl/debugging/internal/demangle.cc",
      "src/absl/debugging/internal/demangle.h",
      "src/absl/debugging/internal/elf_mem_image.cc",
      "src/absl/debugging/internal/elf_mem_image.h",
      "src/absl/debugging/internal/examine_stack.cc",
      "src/absl/debugging/internal/examine_stack.h",
      "src/absl/debugging/internal/vdso_support.cc",
      "src/absl/debugging/internal/vdso_support.h",
      "src/absl/flags/internal/commandlineflag.cc",
      "src/absl/flags/internal/commandlineflag.h",
      "src/absl/flags/internal/flag.cc",
      "src/absl/flags/internal/flag.h",
      "src/absl/flags/internal/private_handle_accessor.cc",
      "src/absl/flags/internal/private_handle_accessor.h",
      "src/absl/flags/internal/program_name.cc",
      "src/absl/flags/internal/program_name.h",
      "src/absl/flags/internal/registry.h",
      "src/absl/flags/internal/usage.cc",
      "src/absl/flags/internal/usage.h",
      "src/absl/log/internal/check_op.cc",
      "src/absl/log/internal/check_op.h",
      "src/absl/log/internal/conditions.cc",
      "src/absl/log/internal/conditions.h",
      "src/absl/log/internal/fnmatch.cc",
      "src/absl/log/internal/fnmatch.h",
      "src/absl/log/internal/globals.cc",
      "src/absl/log/internal/globals.h",
      "src/absl/log/internal/log_format.cc",
      "src/absl/log/internal/log_format.h",
      "src/absl/log/internal/log_impl.h",
      "src/absl/log/internal/log_message.cc",
      "src/absl/log/internal/log_message.h",
      "src/absl/log/internal/log_sink_set.cc",
      "src/absl/log/internal/log_sink_set.h",
      "src/absl/log/internal/nullguard.cc",
      "src/absl/log/internal/nullguard.h",
      "src/absl/log/internal/proto.cc",
      "src/absl/log/internal/proto.h",
      "src/absl/log/internal/vlog_config.cc",
      "src/absl/log/internal/vlog_config.h",
      "src/absl/profiling/internal/exponential_biased.cc",
      "src/absl/profiling/internal/exponential_biased.h",
      "src/absl/status/internal/status_internal.cc",
      "src/absl/status/internal/status_internal.h",
      "src/absl/strings/internal/cord_internal.cc",
      "src/absl/strings/internal/cord_internal.h",
      "src/absl/strings/internal/cord_rep_btree.cc",
      "src/absl/strings/internal/cord_rep_btree.h",
      "src/absl/strings/internal/cord_rep_btree_navigator.cc",
      "src/absl/strings/internal/cord_rep_btree_navigator.h",
      "src/absl/strings/internal/cord_rep_btree_reader.cc",
      "src/absl/strings/internal/cord_rep_btree_reader.h",
      "src/absl/strings/internal/cord_rep_consume.cc",
      "src/absl/strings/internal/cord_rep_consume.h",
      "src/absl/strings/internal/cord_rep_crc.cc",
      "src/absl/strings/internal/cord_rep_crc.h",
      "src/absl/strings/internal/cord_rep_ring.h",
      "src/absl/strings/internal/cordz_functions.cc",
      "src/absl/strings/internal/cordz_functions.h",
      "src/absl/strings/internal/cordz_handle.cc",
      "src/absl/strings/internal/cordz_handle.h",
      "src/absl/strings/internal/cordz_info.cc",
      "src/absl/strings/internal/cordz_info.h",
      "src/absl/strings/internal/damerau_levenshtein_distance.cc",
      "src/absl/strings/internal/damerau_levenshtein_distance.h",
      "src/absl/strings/internal/str_format/arg.cc",
      "src/absl/strings/internal/str_format/arg.h",
      "src/absl/strings/internal/str_format/bind.cc",
      "src/absl/strings/internal/str_format/bind.h",
      "src/absl/strings/internal/str_format/extension.cc",
      "src/absl/strings/internal/str_format/extension.h",
      "src/absl/strings/internal/str_format/float_conversion.cc",
      "src/absl/strings/internal/str_format/float_conversion.h",
      "src/absl/strings/internal/str_format/output.cc",
      "src/absl/strings/internal/str_format/output.h",
      "src/absl/strings/internal/str_format/parser.cc",
      "src/absl/strings/internal/str_format/parser.h",
      "src/absl/strings/internal/stringify_sink.cc",
      "src/absl/strings/internal/stringify_sink.h",
      "src/absl/synchronization/internal/create_thread_identity.cc",
      "src/absl/synchronization/internal/create_thread_identity.h",
      "src/absl/synchronization/internal/futex_waiter.cc",
      "src/absl/synchronization/internal/futex_waiter.h",
      "src/absl/synchronization/internal/graphcycles.cc",
      "src/absl/synchronization/internal/graphcycles.h",
      "src/absl/synchronization/internal/kernel_timeout.cc",
      "src/absl/synchronization/internal/kernel_timeout.h",
      "src/absl/synchronization/internal/per_thread_sem.cc",
      "src/absl/synchronization/internal/per_thread_sem.h",
      "src/absl/synchronization/internal/pthread_waiter.cc",
      "src/absl/synchronization/internal/pthread_waiter.h",
      "src/absl/synchronization/internal/waiter.h",
      "src/absl/synchronization/internal/waiter_base.cc",
      "src/absl/synchronization/internal/waiter_base.h",
      "src/absl/time/internal/cctz/include/cctz/civil_time.h",
      "src/absl/time/internal/cctz/include/cctz/civil_time_detail.h",
      "src/absl/time/internal/cctz/include/cctz/time_zone.h",
      "src/absl/time/internal/cctz/include/cctz/zone_info_source.h",
      "src/absl/time/internal/cctz/src/time_zone_fixed.cc",
      "src/absl/time/internal/cctz/src/time_zone_fixed.h",
      "src/absl/time/internal/cctz/src/time_zone_format.cc",
      "src/absl/time/internal/cctz/src/time_zone_if.cc",
      "src/absl/time/internal/cctz/src/time_zone_if.h",
      "src/absl/time/internal/cctz/src/time_zone_impl.cc",
      "src/absl/time/internal/cctz/src/time_zone_impl.h",
      "src/absl/time/internal/cctz/src/time_zone_info.cc",
      "src/absl/time/internal/cctz/src/time_zone_info.h",
      "src/absl/time/internal/cctz/src/time_zone_libc.cc",
      "src/absl/time/internal/cctz/src/time_zone_libc.h",
      "src/absl/time/internal/cctz/src/time_zone_lookup.cc",
      "src/absl/time/internal/cctz/src/time_zone_posix.cc",
      "src/absl/time/internal/cctz/src/time_zone_posix.h",
      "src/absl/time/internal/cctz/src/zone_info_source.cc",
    ]

    deps = [ ":abseil" ]
    public_configs = [ ":abseil_config" ]
    configs += [ ":private_abseil_quiche_config" ]
  }

  source_set("abseil_quiche") {
    visibility = [ "//third_party/quiche" ]

    sources = [
      "src/absl/crc/crc32c.cc",
      "src/absl/crc/crc32c.h",
      "src/absl/debugging/stacktrace.cc",
      "src/absl/debugging/stacktrace.h",
      "src/absl/debugging/symbolize.cc",
      "src/absl/debugging/symbolize.h",
      "src/absl/flags/commandlineflag.cc",
      "src/absl/flags/commandlineflag.h",
      "src/absl/flags/marshalling.cc",
      "src/absl/flags/marshalling.h",
      "src/absl/flags/parse.cc",
      "src/absl/flags/parse.h",
      "src/absl/flags/reflection.cc",
      "src/absl/flags/reflection.h",
      "src/absl/flags/usage.cc",
      "src/absl/flags/usage.h",
      "src/absl/flags/usage_config.cc",
      "src/absl/flags/usage_config.h",
      "src/absl/log/absl_log.h",
      "src/absl/log/flags.cc",
      "src/absl/log/flags.h",
      "src/absl/log/globals.cc",
      "src/absl/log/globals.h",
      "src/absl/log/initialize.cc",
      "src/absl/log/initialize.h",
      "src/absl/log/log_sink.cc",
      "src/absl/log/log_sink.h",
      "src/absl/status/status.cc",
      "src/absl/status/status.h",
      "src/absl/status/status_payload_printer.cc",
      "src/absl/status/status_payload_printer.h",
      "src/absl/status/statusor.cc",
      "src/absl/status/statusor.h",
      "src/absl/strings/cord.cc",
      "src/absl/strings/cord.h",
      "src/absl/strings/string_view.cc",
      "src/absl/strings/string_view.h",
      "src/absl/synchronization/mutex.cc",
      "src/absl/synchronization/mutex.h",
      "src/absl/time/clock.cc",
      "src/absl/time/clock.h",
      "src/absl/time/duration.cc",
      "src/absl/time/time.cc",
      "src/absl/time/time.h",
      "src/absl/types/optional.h",
    ]

    if (is_mac) {
      frameworks = [ "CoreFoundation.framework" ]
    }

    deps = [
      ":abseil",
      ":abseil_quiche_internal",
    ]
    configs += [ ":private_abseil_quiche_config" ]
  }
}
