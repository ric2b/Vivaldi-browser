load("//bazel:skia_rules.bzl", "generate_cpp_files_for_headers", "skia_filegroup")

package(
    default_applicable_licenses = ["//:license"],
)

licenses(["notice"])

skia_filegroup(
    name = "ganesh_hdrs",
    srcs = [
        "GrBackendSemaphore.h",
        "GrBackendSurface.h",
        "GrContextOptions.h",
        "GrContextThreadSafeProxy.h",
        "GrDirectContext.h",
        "GrDriverBugWorkarounds.h",
        "GrDriverBugWorkaroundsAutogen.h",
        "GrExternalTextureGenerator.h",
        "GrRecordingContext.h",
        "GrTypes.h",
        "GrYUVABackendTextures.h",
        "SkImageGanesh.h",
        "SkMeshGanesh.h",
        "SkSurfaceGanesh.h",
    ],
    visibility = ["//src/gpu/ganesh:__subpackages__"],
)

generate_cpp_files_for_headers(
    name = "headers_to_compile",
    headers = [
        "GrExternalTextureGenerator.h",
        "GrTypes.h",
        "SkImageGanesh.h",
        "SkMeshGanesh.h",
        "SkSurfaceGanesh.h",
    ],
)
