This is a testharness.js-based test.
[FAIL] User succesfully selected an empty directory.
  promise_test: Unhandled rejection with value: object "AbortError: The user aborted a request."
[FAIL] User granted write access.
  promise_test: Unhandled rejection with value: object "AbortError: The user aborted a request."
[FAIL] remove() to remove a file
  promise_test: Unhandled rejection with value: object "AbortError: The user aborted a request."
[FAIL] remove() on an already removed file should fail
  promise_test: Unhandled rejection with value: object "AbortError: The user aborted a request."
[FAIL] remove() to remove an empty directory
  promise_test: Unhandled rejection with value: object "AbortError: The user aborted a request."
[FAIL] remove() on an already removed directory should fail
  promise_test: Unhandled rejection with value: object "AbortError: The user aborted a request."
[FAIL] remove() on a non-empty directory should fail
  promise_test: Unhandled rejection with value: object "AbortError: The user aborted a request."
[FAIL] remove() on a directory recursively should delete all sub-items
  promise_test: Unhandled rejection with value: object "AbortError: The user aborted a request."
[FAIL] remove() on a file should ignore the recursive option
  promise_test: Unhandled rejection with value: object "AbortError: The user aborted a request."
[FAIL] remove() while the file has an open writable fails
  promise_test: Unhandled rejection with value: object "AbortError: The user aborted a request."
Harness: the test ran to completion.

