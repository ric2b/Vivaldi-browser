This is a testharness.js-based test.
[FAIL] User succesfully selected an empty directory.
  promise_test: Unhandled rejection with value: object "AbortError: The user aborted a request."
[FAIL] User granted write access.
  promise_test: Unhandled rejection with value: object "AbortError: The user aborted a request."
[FAIL] truncate() to shrink a file
  promise_test: Unhandled rejection with value: object "AbortError: The user aborted a request."
[FAIL] truncate() to grow a file
  promise_test: Unhandled rejection with value: object "AbortError: The user aborted a request."
[FAIL] createWritable() fails when parent directory is removed
  promise_test: Unhandled rejection with value: object "AbortError: The user aborted a request."
[FAIL] createWritable({keepExistingData: true}): atomic writable file stream initialized with source contents
  promise_test: Unhandled rejection with value: object "AbortError: The user aborted a request."
[FAIL] createWritable({keepExistingData: false}): atomic writable file stream initialized with empty file
  promise_test: Unhandled rejection with value: object "AbortError: The user aborted a request."
[FAIL] cursor position: truncate size > offset
  promise_test: Unhandled rejection with value: object "AbortError: The user aborted a request."
[FAIL] cursor position: truncate size < offset
  promise_test: Unhandled rejection with value: object "AbortError: The user aborted a request."
[FAIL] commands are queued, stream is unlocked after each operation
  promise_test: Unhandled rejection with value: object "AbortError: The user aborted a request."
Harness: the test ran to completion.

