This is a testharness.js-based test.
Found 30 FAIL, 0 TIMEOUT, 0 NOTRUN.
[FAIL] e.style['color'] = "rgb(from rebeccapurple none none none)" should set the property value
  Colors do not match.\nActual:   color(srgb 0 0 0)\nExpected: color(srgb none none none).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 0 got 3
[FAIL] e.style['color'] = "rgb(from rebeccapurple none none none / none)" should set the property value
  Colors do not match.\nActual:   color(srgb 0 0 0 / none)\nExpected: color(srgb none none none / none).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 0 got 3
[FAIL] e.style['color'] = "rgb(from rebeccapurple r g none)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.4 0.2 0)\nExpected: color(srgb 0.4 0.2 none).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 2 got 3
[FAIL] e.style['color'] = "rgb(from rebeccapurple r g none / alpha)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.4 0.2 0)\nExpected: color(srgb 0.4 0.2 none).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 2 got 3
[FAIL] e.style['color'] = "rgb(from rgb(20% 40% 60% / 80%) r g none / alpha)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.2 0.4 0 / 0.8)\nExpected: color(srgb 0.2 0.4 none / 0.8).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 3 got 4
[FAIL] e.style['color'] = "rgb(from currentColor r g b)" should set the property value
  assert_not_equals: property should be set got disallowed value ""
[FAIL] e.style['color'] = "rgba(from rebeccapurple none none none)" should set the property value
  Colors do not match.\nActual:   color(srgb 0 0 0)\nExpected: color(srgb none none none).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 0 got 3
[FAIL] e.style['color'] = "rgba(from rebeccapurple none none none / none)" should set the property value
  Colors do not match.\nActual:   color(srgb 0 0 0 / none)\nExpected: color(srgb none none none / none).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 0 got 3
[FAIL] e.style['color'] = "rgba(from rebeccapurple r g none)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.4 0.2 0)\nExpected: color(srgb 0.4 0.2 none).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 2 got 3
[FAIL] e.style['color'] = "rgba(from rebeccapurple r g none / alpha)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.4 0.2 0)\nExpected: color(srgb 0.4 0.2 none).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 2 got 3
[FAIL] e.style['color'] = "rgba(from rgb(20% 40% 60% / 80%) r g none / alpha)" should set the property value
  Colors do not match.\nActual:   color(srgb 0.2 0.4 0 / 0.8)\nExpected: color(srgb 0.2 0.4 none / 0.8).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 3 got 4
[FAIL] e.style['color'] = "rgba(from currentColor r g b)" should set the property value
  assert_not_equals: property should be set got disallowed value ""
[FAIL] e.style['color'] = "hsl(from rebeccapurple none none none / none)" should set the property value
  Colors do not match.\nActual:   color(srgb 0 0 0 / none)\nExpected: color(srgb 0 0 0 / 0).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 4 got 3
[FAIL] e.style['color'] = "hsl(from currentColor h s l)" should set the property value
  assert_not_equals: property should be set got disallowed value ""
[FAIL] e.style['color'] = "hsla(from rebeccapurple none none none / none)" should set the property value
  Colors do not match.\nActual:   color(srgb 0 0 0 / none)\nExpected: color(srgb 0 0 0 / 0).\nError: assert_array_approx_equals: Numeric parameters are approximately equal. lengths differ, expected 4 got 3
[FAIL] e.style['color'] = "hsla(from currentColor h s l)" should set the property value
  assert_not_equals: property should be set got disallowed value ""
[FAIL] e.style['color'] = "hwb(from currentColor h w b)" should set the property value
  assert_not_equals: property should be set got disallowed value ""
[FAIL] e.style['color'] = "lab(from currentColor l a b)" should set the property value
  assert_not_equals: property should be set got disallowed value ""
[FAIL] e.style['color'] = "oklab(from currentColor l a b)" should set the property value
  assert_not_equals: property should be set got disallowed value ""
[FAIL] e.style['color'] = "lch(from currentColor l c h)" should set the property value
  assert_not_equals: property should be set got disallowed value ""
[FAIL] e.style['color'] = "oklch(from currentColor l c h)" should set the property value
  assert_not_equals: property should be set got disallowed value ""
[FAIL] e.style['color'] = "color(from currentColor srgb r g b)" should set the property value
  assert_not_equals: property should be set got disallowed value ""
[FAIL] e.style['color'] = "color(from currentColor srgb-linear r g b)" should set the property value
  assert_not_equals: property should be set got disallowed value ""
[FAIL] e.style['color'] = "color(from currentColor a98-rgb r g b)" should set the property value
  assert_not_equals: property should be set got disallowed value ""
[FAIL] e.style['color'] = "color(from currentColor rec2020 r g b)" should set the property value
  assert_not_equals: property should be set got disallowed value ""
[FAIL] e.style['color'] = "color(from currentColor prophoto-rgb r g b)" should set the property value
  assert_not_equals: property should be set got disallowed value ""
[FAIL] e.style['color'] = "color(from currentColor display-p3 r g b)" should set the property value
  assert_not_equals: property should be set got disallowed value ""
[FAIL] e.style['color'] = "color(from currentColor xyz x y z)" should set the property value
  assert_not_equals: property should be set got disallowed value ""
[FAIL] e.style['color'] = "color(from currentColor xyz-d50 x y z)" should set the property value
  assert_not_equals: property should be set got disallowed value ""
[FAIL] e.style['color'] = "color(from currentColor xyz-d65 x y z)" should set the property value
  assert_not_equals: property should be set got disallowed value ""
Harness: the test ran to completion.

