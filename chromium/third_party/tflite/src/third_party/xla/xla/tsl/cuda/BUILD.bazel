# Description:
#   Stubs for dynamically loading CUDA.

load(
    "@local_tsl//tsl/platform:rules_cc.bzl",
    "cc_library",
)
load(
    "@local_tsl//tsl/platform/default:cuda_build_defs.bzl",
    "cuda_rpath_flags",
    "if_cuda_is_configured",
)
load("//xla/tsl/cuda:stub.bzl", "cuda_stub")

package(
    licenses = ["notice"],
)

cuda_stub(
    name = "cublas",
    srcs = ["cublas.symbols"],
)

cc_library(
    name = "cublas",  # buildifier: disable=duplicated-name
    srcs = if_cuda_is_configured([
        "cublas_stub.cc",
        "cublas.tramp.S",
    ]),
    linkopts = if_cuda_is_configured(cuda_rpath_flags(
        "nvidia/cublas/lib",
    )),
    local_defines = [
        "IMPLIB_EXPORT_SHIMS=1",
    ],
    textual_hdrs = ["cublas.inc"],
    visibility = ["//visibility:public"],
    deps = if_cuda_is_configured([
        "@com_google_absl//absl/container:flat_hash_set",
        "@local_config_cuda//cuda:cuda_headers",
        "@local_tsl//tsl/platform:dso_loader",
        "@local_tsl//tsl/platform:logging",
        "@local_tsl//tsl/platform:load_library",
    ]),
)

cuda_stub(
    name = "cublasLt",
    srcs = ["cublasLt.symbols"],
)

cc_library(
    name = "cublas_lt",
    srcs = if_cuda_is_configured([
        "cublasLt_stub.cc",
        "cublasLt.tramp.S",
    ]),
    local_defines = [
        "IMPLIB_EXPORT_SHIMS=1",
    ],
    textual_hdrs = ["cublasLt.inc"],
    visibility = ["//visibility:public"],
    deps = if_cuda_is_configured([
        "@local_config_cuda//cuda:cuda_headers",
        "@local_tsl//tsl/platform:dso_loader",
        "@local_tsl//tsl/platform:logging",
        "@local_tsl//tsl/platform:load_library",
    ]),
)

cuda_stub(
    name = "cuda",
    srcs = ["cuda.symbols"],
)

cc_library(
    name = "cuda",  # buildifier: disable=duplicated-name
    srcs = if_cuda_is_configured([
        "cuda_stub.cc",
        "cuda.tramp.S",
    ]),
    local_defines = [
        "IMPLIB_EXPORT_SHIMS=1",
    ],
    textual_hdrs = ["cuda.inc"],
    visibility = ["//visibility:public"],
    deps = if_cuda_is_configured([
        "@local_config_cuda//cuda:cuda_headers",
        "@local_tsl//tsl/platform:dso_loader",
        "@local_tsl//tsl/platform:logging",
        "@local_tsl//tsl/platform:load_library",
    ]),
)

cuda_stub(
    name = "cudart",
    srcs = ["cudart.symbols"],
)

cc_library(
    name = "cudart",  # buildifier: disable=duplicated-name
    srcs = select({
        # include dynamic loading implementation only when if_cuda_is_configured and build dynamically
        "@local_xla//xla/tsl:is_cuda_enabled_and_oss": [
            "cudart.tramp.S",
            "cudart_stub.cc",
        ],
        "//conditions:default": [],
    }),
    linkopts = select({
        "@local_xla//xla/tsl:is_cuda_enabled_and_oss": cuda_rpath_flags("nvidia/cuda_runtime/lib"),
        "//conditions:default": [],
    }),
    local_defines = [
        "IMPLIB_EXPORT_SHIMS=1",
    ],
    textual_hdrs = ["cudart.inc"],
    visibility = ["//visibility:public"],
    deps = select({
        "@local_xla//xla/tsl:is_cuda_enabled_and_oss": [
            ":cuda",
            "@com_google_absl//absl/container:flat_hash_set",
            "@local_config_cuda//cuda:cuda_headers",
            "@local_tsl//tsl/platform:dso_loader",
            "@local_tsl//tsl/platform:load_library",
            "@local_tsl//tsl/platform:logging",
        ],
        "//conditions:default": [],
    }),
)

cuda_stub(
    name = "cudnn",
    srcs = ["cudnn.symbols"],
)

cc_library(
    name = "cudnn",  # buildifier: disable=duplicated-name
    srcs = if_cuda_is_configured([
        "cudnn_stub.cc",
        "cudnn.tramp.S",
    ]),
    linkopts = if_cuda_is_configured(cuda_rpath_flags("nvidia/cudnn/lib")),
    local_defines = [
        "IMPLIB_EXPORT_SHIMS=1",
    ],
    textual_hdrs = ["cudnn.inc"],
    visibility = ["//visibility:public"],
    deps = if_cuda_is_configured([
        "@com_google_absl//absl/container:flat_hash_map",
        "@local_config_cuda//cuda:cudnn_header",
        "@local_tsl//tsl/platform:dso_loader",
        "@local_tsl//tsl/platform:logging",
        "@local_tsl//tsl/platform:load_library",
    ]),
)

cc_library(
    name = "nccl_rpath",
    linkopts = if_cuda_is_configured(cuda_rpath_flags("nvidia/nccl/lib")),
    visibility = ["//visibility:public"],
)

cc_library(
    name = "tensorrt_rpath",
    linkopts = if_cuda_is_configured(cuda_rpath_flags("tensorrt")),
    visibility = ["//visibility:public"],
)

cuda_stub(
    name = "cufft",
    srcs = ["cufft.symbols"],
)

cc_library(
    name = "cufft",  # buildifier: disable=duplicated-name
    srcs = if_cuda_is_configured([
        "cufft_stub.cc",
        "cufft.tramp.S",
    ]),
    linkopts = if_cuda_is_configured(cuda_rpath_flags("nvidia/cufft/lib")),
    local_defines = [
        "IMPLIB_EXPORT_SHIMS=1",
    ],
    textual_hdrs = ["cufft.inc"],
    visibility = ["//visibility:public"],
    deps = if_cuda_is_configured([
        "@local_config_cuda//cuda:cuda_headers",
        "@local_tsl//tsl/platform:dso_loader",
        "@local_tsl//tsl/platform:logging",
        "@local_tsl//tsl/platform:load_library",
    ]),
)

cuda_stub(
    name = "cupti",
    srcs = ["cupti.symbols"],
)

cc_library(
    name = "cupti",  # buildifier: disable=duplicated-name
    srcs = if_cuda_is_configured([
        "cupti_stub.cc",
        "cupti.tramp.S",
    ]),
    data = if_cuda_is_configured(["@local_config_cuda//cuda:cupti_dsos"]),
    linkopts = if_cuda_is_configured(cuda_rpath_flags("nvidia/cuda_cupti/lib")),
    local_defines = [
        "IMPLIB_EXPORT_SHIMS=1",
    ],
    textual_hdrs = ["cupti.inc"],
    visibility = ["//visibility:public"],
    deps = if_cuda_is_configured([
        "@local_config_cuda//cuda:cuda_headers",
        "@local_config_cuda//cuda:cupti_headers",
        "@local_tsl//tsl/platform:dso_loader",
        "@local_tsl//tsl/platform:logging",
        "@local_tsl//tsl/platform:load_library",
    ]),
)

cuda_stub(
    name = "cusolver",
    srcs = ["cusolver.symbols"],
)

cc_library(
    name = "cusolver",  # buildifier: disable=duplicated-name
    srcs = if_cuda_is_configured([
        "cusolver_stub.cc",
        "cusolver.tramp.S",
    ]),
    linkopts = if_cuda_is_configured(cuda_rpath_flags("nvidia/cusolver/lib")),
    local_defines = [
        "IMPLIB_EXPORT_SHIMS=1",
    ],
    textual_hdrs = ["cusolver.inc"],
    visibility = ["//visibility:public"],
    deps = if_cuda_is_configured([
        "@local_config_cuda//cuda:cuda_headers",
        "@local_tsl//tsl/platform:dso_loader",
        "@local_tsl//tsl/platform:logging",
        "@local_tsl//tsl/platform:load_library",
    ]),
)

cuda_stub(
    name = "cusparse",
    srcs = ["cusparse.symbols"],
)

cc_library(
    name = "cusparse",  # buildifier: disable=duplicated-name
    srcs = if_cuda_is_configured([
        "cusparse_stub.cc",
        "cusparse.tramp.S",
    ]),
    linkopts = if_cuda_is_configured(cuda_rpath_flags("nvidia/cusparse/lib")),
    local_defines = [
        "IMPLIB_EXPORT_SHIMS=1",
    ],
    textual_hdrs = ["cusparse.inc"],
    visibility = ["//visibility:public"],
    deps = if_cuda_is_configured([
        "@com_google_absl//absl/container:flat_hash_set",
        "@local_config_cuda//cuda:cuda_headers",
        "@local_tsl//tsl/platform:dso_loader",
        "@local_tsl//tsl/platform:logging",
        "@local_tsl//tsl/platform:load_library",
    ]),
)

cuda_stub(
    name = "nccl",
    srcs = ["nccl.symbols"],
)

cc_library(
    name = "nccl_stub",
    srcs = if_cuda_is_configured([
        "nccl_stub.cc",
        "nccl.tramp.S",
    ]),
    linkopts = if_cuda_is_configured(cuda_rpath_flags("nvidia/nccl/lib")),
    local_defines = [
        "IMPLIB_EXPORT_SHIMS=1",
    ],
    textual_hdrs = ["nccl.inc"],
    visibility = ["//visibility:public"],
    deps = if_cuda_is_configured([
        "@com_google_absl//absl/container:flat_hash_set",
        "@local_config_cuda//cuda:cuda_headers",
        "@local_config_nccl//:nccl_headers",
        "@local_tsl//tsl/platform:dso_loader",
        "@local_tsl//tsl/platform:logging",
        "@local_tsl//tsl/platform:load_library",
    ]),
)
