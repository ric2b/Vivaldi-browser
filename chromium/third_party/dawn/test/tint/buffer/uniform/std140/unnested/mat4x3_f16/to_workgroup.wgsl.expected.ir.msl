#include <metal_stdlib>
using namespace metal;

template<typename T, size_t N>
struct tint_array {
  const constant T& operator[](size_t i) const constant { return elements[i]; }
  device T& operator[](size_t i) device { return elements[i]; }
  const device T& operator[](size_t i) const device { return elements[i]; }
  thread T& operator[](size_t i) thread { return elements[i]; }
  const thread T& operator[](size_t i) const thread { return elements[i]; }
  threadgroup T& operator[](size_t i) threadgroup { return elements[i]; }
  const threadgroup T& operator[](size_t i) const threadgroup { return elements[i]; }
  T elements[N];
};

struct tint_packed_vec3_f16_array_element {
  /* 0x0000 */ packed_half3 packed;
  /* 0x0006 */ tint_array<int8_t, 2> tint_pad;
};

struct tint_module_vars_struct {
  const constant tint_array<tint_packed_vec3_f16_array_element, 4>* u;
  threadgroup tint_array<tint_packed_vec3_f16_array_element, 4>* w;
};

struct tint_symbol_1 {
  tint_array<tint_packed_vec3_f16_array_element, 4> tint_symbol;
};

void f_inner(uint tint_local_index, tint_module_vars_struct tint_module_vars) {
  if ((tint_local_index == 0u)) {
    (*tint_module_vars.w)[0u].packed = packed_half3(half4x3(half3(0.0h), half3(0.0h), half3(0.0h), half3(0.0h))[0u]);
    (*tint_module_vars.w)[1u].packed = packed_half3(half4x3(half3(0.0h), half3(0.0h), half3(0.0h), half3(0.0h))[1u]);
    (*tint_module_vars.w)[2u].packed = packed_half3(half4x3(half3(0.0h), half3(0.0h), half3(0.0h), half3(0.0h))[2u]);
    (*tint_module_vars.w)[3u].packed = packed_half3(half4x3(half3(0.0h), half3(0.0h), half3(0.0h), half3(0.0h))[3u]);
  }
  threadgroup_barrier(mem_flags::mem_threadgroup);
  tint_array<tint_packed_vec3_f16_array_element, 4> const v = (*tint_module_vars.u);
  half3 const v_1 = half3(v[0u].packed);
  half3 const v_2 = half3(v[1u].packed);
  half3 const v_3 = half3(v[2u].packed);
  half4x3 const v_4 = half4x3(v_1, v_2, v_3, half3(v[3u].packed));
  (*tint_module_vars.w)[0u].packed = packed_half3(v_4[0u]);
  (*tint_module_vars.w)[1u].packed = packed_half3(v_4[1u]);
  (*tint_module_vars.w)[2u].packed = packed_half3(v_4[2u]);
  (*tint_module_vars.w)[3u].packed = packed_half3(v_4[3u]);
  (*tint_module_vars.w)[1].packed = packed_half3(half3((*tint_module_vars.u)[0].packed));
  (*tint_module_vars.w)[1].packed = packed_half3(half3((*tint_module_vars.u)[0].packed).zxy);
  (*tint_module_vars.w)[0].packed[1] = (*tint_module_vars.u)[1].packed[0];
}

kernel void f(uint tint_local_index [[thread_index_in_threadgroup]], const constant tint_array<tint_packed_vec3_f16_array_element, 4>* u [[buffer(0)]], threadgroup tint_symbol_1* v_5 [[threadgroup(0)]]) {
  tint_module_vars_struct const tint_module_vars = tint_module_vars_struct{.u=u, .w=(&(*v_5).tint_symbol)};
  f_inner(tint_local_index, tint_module_vars);
}
