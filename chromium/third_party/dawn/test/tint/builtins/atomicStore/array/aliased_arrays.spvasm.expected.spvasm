; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 1
; Bound: 98
; Schema: 0
               OpCapability Shader
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %compute_main "compute_main" %compute_main_local_invocation_index_Input
               OpExecutionMode %compute_main LocalSize 1 1 1
               OpName %local_invocation_index_1 "local_invocation_index_1"
               OpName %wg "wg"
               OpName %compute_main_local_invocation_index_Input "compute_main_local_invocation_index_Input"
               OpName %compute_main_inner "compute_main_inner"
               OpName %local_invocation_index_2 "local_invocation_index_2"
               OpName %idx "idx"
               OpName %x_31 "x_31"
               OpName %x_33 "x_33"
               OpName %x_35 "x_35"
               OpName %compute_main_1 "compute_main_1"
               OpName %x_57 "x_57"
               OpName %compute_main_inner_0 "compute_main_inner"
               OpName %local_invocation_index_1_param "local_invocation_index_1_param"
               OpName %tint_div_u32 "tint_div_u32"
               OpName %lhs "lhs"
               OpName %rhs "rhs"
               OpName %tint_mod_u32 "tint_mod_u32"
               OpName %lhs_0 "lhs"
               OpName %rhs_0 "rhs"
               OpName %compute_main "compute_main"
               OpDecorate %_arr_uint_uint_1 ArrayStride 4
               OpDecorate %_arr__arr_uint_uint_1_uint_2 ArrayStride 4
               OpDecorate %_arr__arr__arr_uint_uint_1_uint_2_uint_3 ArrayStride 8
               OpDecorate %compute_main_local_invocation_index_Input BuiltIn LocalInvocationIndex
       %uint = OpTypeInt 32 0
%_ptr_Private_uint = OpTypePointer Private %uint
          %4 = OpConstantNull %uint
%local_invocation_index_1 = OpVariable %_ptr_Private_uint Private %4
     %uint_1 = OpConstant %uint 1
%_arr_uint_uint_1 = OpTypeArray %uint %uint_1
     %uint_2 = OpConstant %uint 2
%_arr__arr_uint_uint_1_uint_2 = OpTypeArray %_arr_uint_uint_1 %uint_2
     %uint_3 = OpConstant %uint 3
%_arr__arr__arr_uint_uint_1_uint_2_uint_3 = OpTypeArray %_arr__arr_uint_uint_1_uint_2 %uint_3
%_ptr_Workgroup__arr__arr__arr_uint_uint_1_uint_2_uint_3 = OpTypePointer Workgroup %_arr__arr__arr_uint_uint_1_uint_2_uint_3
         %wg = OpVariable %_ptr_Workgroup__arr__arr__arr_uint_uint_1_uint_2_uint_3 Workgroup
%_ptr_Input_uint = OpTypePointer Input %uint
%compute_main_local_invocation_index_Input = OpVariable %_ptr_Input_uint Input
       %void = OpTypeVoid
         %18 = OpTypeFunction %void %uint
%_ptr_Function_uint = OpTypePointer Function %uint
     %uint_0 = OpConstant %uint 0
     %uint_6 = OpConstant %uint 6
       %bool = OpTypeBool
%_ptr_Workgroup_uint = OpTypePointer Workgroup %uint
   %uint_264 = OpConstant %uint 264
        %int = OpTypeInt 32 1
      %int_2 = OpConstant %int 2
      %int_1 = OpConstant %int 1
      %int_0 = OpConstant %int 0
         %56 = OpTypeFunction %void
         %81 = OpTypeFunction %uint %uint %uint
%compute_main_inner = OpFunction %void None %18
%local_invocation_index_2 = OpFunctionParameter %uint
         %19 = OpLabel
        %idx = OpVariable %_ptr_Function_uint Function
               OpStore %idx %uint_0
               OpStore %idx %local_invocation_index_2 None
               OpBranch %25
         %25 = OpLabel
               OpLoopMerge %26 %24 None
               OpBranch %23
         %23 = OpLabel
         %27 = OpLoad %uint %idx None
         %28 = OpULessThan %bool %27 %uint_6
         %31 = OpLogicalNot %bool %28
               OpSelectionMerge %32 None
               OpBranchConditional %31 %33 %32
         %33 = OpLabel
               OpBranch %26
         %32 = OpLabel
       %x_31 = OpLoad %uint %idx None
       %x_33 = OpLoad %uint %idx None
       %x_35 = OpLoad %uint %idx None
         %37 = OpFunctionCall %uint %tint_div_u32 %x_31 %uint_2
         %39 = OpFunctionCall %uint %tint_mod_u32 %x_33 %uint_2
         %41 = OpFunctionCall %uint %tint_mod_u32 %x_35 %uint_1
         %42 = OpAccessChain %_ptr_Workgroup_uint %wg %37 %39 %41
               OpAtomicStore %42 %uint_2 %uint_0 %uint_0
               OpBranch %24
         %24 = OpLabel
         %45 = OpLoad %uint %idx None
         %46 = OpIAdd %uint %45 %uint_1
               OpStore %idx %46 None
               OpBranch %25
         %26 = OpLabel
               OpControlBarrier %uint_2 %uint_2 %uint_264
         %49 = OpAccessChain %_ptr_Workgroup_uint %wg %int_2 %int_1 %int_0
               OpAtomicStore %49 %uint_2 %uint_0 %uint_1
               OpReturn
               OpFunctionEnd
%compute_main_1 = OpFunction %void None %56
         %57 = OpLabel
       %x_57 = OpLoad %uint %local_invocation_index_1 None
         %59 = OpFunctionCall %void %compute_main_inner %x_57
               OpReturn
               OpFunctionEnd
%compute_main_inner_0 = OpFunction %void None %18
%local_invocation_index_1_param = OpFunctionParameter %uint
         %62 = OpLabel
               OpBranch %63
         %63 = OpLabel
               OpBranch %66
         %66 = OpLabel
         %68 = OpPhi %uint %local_invocation_index_1_param %63 %69 %65
               OpLoopMerge %67 %65 None
               OpBranch %64
         %64 = OpLabel
         %70 = OpUGreaterThanEqual %bool %68 %uint_6
               OpSelectionMerge %71 None
               OpBranchConditional %70 %72 %71
         %72 = OpLabel
               OpBranch %67
         %71 = OpLabel
         %73 = OpUMod %uint %68 %uint_2
         %74 = OpUDiv %uint %68 %uint_2
         %75 = OpAccessChain %_ptr_Workgroup_uint %wg %74 %73 %uint_0
               OpAtomicStore %75 %uint_2 %uint_0 %uint_0
               OpBranch %65
         %65 = OpLabel
         %69 = OpIAdd %uint %68 %uint_1
               OpBranch %66
         %67 = OpLabel
               OpControlBarrier %uint_2 %uint_2 %uint_264
               OpStore %local_invocation_index_1 %local_invocation_index_1_param None
         %78 = OpFunctionCall %void %compute_main_1
               OpReturn
               OpFunctionEnd
%tint_div_u32 = OpFunction %uint None %81
        %lhs = OpFunctionParameter %uint
        %rhs = OpFunctionParameter %uint
         %82 = OpLabel
         %83 = OpIEqual %bool %rhs %uint_0
         %84 = OpSelect %uint %83 %uint_1 %rhs
         %85 = OpUDiv %uint %lhs %84
               OpReturnValue %85
               OpFunctionEnd
%tint_mod_u32 = OpFunction %uint None %81
      %lhs_0 = OpFunctionParameter %uint
      %rhs_0 = OpFunctionParameter %uint
         %88 = OpLabel
         %89 = OpIEqual %bool %rhs_0 %uint_0
         %90 = OpSelect %uint %89 %uint_1 %rhs_0
         %91 = OpUDiv %uint %lhs_0 %90
         %92 = OpIMul %uint %91 %90
         %93 = OpISub %uint %lhs_0 %92
               OpReturnValue %93
               OpFunctionEnd
%compute_main = OpFunction %void None %56
         %95 = OpLabel
         %96 = OpLoad %uint %compute_main_local_invocation_index_Input None
         %97 = OpFunctionCall %void %compute_main_inner_0 %96
               OpReturn
               OpFunctionEnd
