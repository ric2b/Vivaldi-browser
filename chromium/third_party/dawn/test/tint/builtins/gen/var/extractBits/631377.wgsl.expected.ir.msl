#include <metal_stdlib>
using namespace metal;

struct tint_module_vars_struct {
  device uint4* prevent_dce;
};

struct VertexOutput {
  float4 pos;
  uint4 prevent_dce;
};

struct vertex_main_outputs {
  float4 VertexOutput_pos [[position]];
  uint4 VertexOutput_prevent_dce [[user(locn0)]] [[flat]];
};

uint4 extractBits_631377() {
  uint4 arg_0 = uint4(1u);
  uint arg_1 = 1u;
  uint arg_2 = 1u;
  uint4 const v = arg_0;
  uint const v_1 = arg_2;
  uint const v_2 = min(arg_1, 32u);
  uint4 res = extract_bits(v, v_2, min(v_1, (32u - v_2)));
  return res;
}

fragment void fragment_main(device uint4* prevent_dce [[buffer(0)]]) {
  tint_module_vars_struct const tint_module_vars = tint_module_vars_struct{.prevent_dce=prevent_dce};
  (*tint_module_vars.prevent_dce) = extractBits_631377();
}

kernel void compute_main(device uint4* prevent_dce [[buffer(0)]]) {
  tint_module_vars_struct const tint_module_vars = tint_module_vars_struct{.prevent_dce=prevent_dce};
  (*tint_module_vars.prevent_dce) = extractBits_631377();
}

VertexOutput vertex_main_inner() {
  VertexOutput out = {};
  out.pos = float4(0.0f);
  out.prevent_dce = extractBits_631377();
  return out;
}

vertex vertex_main_outputs vertex_main() {
  VertexOutput const v_3 = vertex_main_inner();
  vertex_main_outputs tint_wrapper_result = {};
  tint_wrapper_result.VertexOutput_pos = v_3.pos;
  tint_wrapper_result.VertexOutput_prevent_dce = v_3.prevent_dce;
  return tint_wrapper_result;
}
