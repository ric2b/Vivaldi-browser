#include <metal_stdlib>
using namespace metal;

struct tint_module_vars_struct {
  depth2d_ms<float, access::read> arg_0;
  thread float4* tint_symbol_1;
};

struct vertex_main_out {
  float4 tint_symbol_1_1;
};

struct vertex_main_outputs {
  float4 vertex_main_out_tint_symbol_1_1 [[position]];
};

void textureDimensions_f60bdb(tint_module_vars_struct tint_module_vars) {
  int2 res = int2(0);
  uint const v = tint_module_vars.arg_0.get_width();
  res = int2(uint2(v, tint_module_vars.arg_0.get_height()));
}

void tint_symbol_2(float4 tint_symbol, tint_module_vars_struct tint_module_vars) {
  (*tint_module_vars.tint_symbol_1) = tint_symbol;
}

void vertex_main_1(tint_module_vars_struct tint_module_vars) {
  textureDimensions_f60bdb(tint_module_vars);
  tint_symbol_2(float4(0.0f), tint_module_vars);
}

vertex_main_out vertex_main_inner(tint_module_vars_struct tint_module_vars) {
  vertex_main_1(tint_module_vars);
  return vertex_main_out{.tint_symbol_1_1=(*tint_module_vars.tint_symbol_1)};
}

void fragment_main_1(tint_module_vars_struct tint_module_vars) {
  textureDimensions_f60bdb(tint_module_vars);
}

fragment void fragment_main(depth2d_ms<float, access::read> arg_0 [[texture(0)]]) {
  tint_module_vars_struct const tint_module_vars = tint_module_vars_struct{.arg_0=arg_0};
  fragment_main_1(tint_module_vars);
}

void compute_main_1(tint_module_vars_struct tint_module_vars) {
  textureDimensions_f60bdb(tint_module_vars);
}

kernel void compute_main(depth2d_ms<float, access::read> arg_0 [[texture(0)]]) {
  tint_module_vars_struct const tint_module_vars = tint_module_vars_struct{.arg_0=arg_0};
  compute_main_1(tint_module_vars);
}

vertex vertex_main_outputs vertex_main(depth2d_ms<float, access::read> arg_0 [[texture(0)]]) {
  thread float4 tint_symbol_1 = float4(0.0f);
  tint_module_vars_struct const tint_module_vars = tint_module_vars_struct{.arg_0=arg_0, .tint_symbol_1=(&tint_symbol_1)};
  return vertex_main_outputs{.vertex_main_out_tint_symbol_1_1=vertex_main_inner(tint_module_vars).tint_symbol_1_1};
}
