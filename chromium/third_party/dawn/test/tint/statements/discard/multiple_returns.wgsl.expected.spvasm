; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 1
; Bound: 77
; Schema: 0
               OpCapability Shader
               OpMemoryModel Logical GLSL450
               OpEntryPoint Fragment %main "main"
               OpExecutionMode %main OriginUpperLeft
               OpMemberName %tint_symbol_1 0 "tint_symbol"
               OpName %tint_symbol_1 "tint_symbol_1"
               OpMemberName %tint_symbol_3 0 "tint_symbol_2"
               OpName %tint_symbol_3 "tint_symbol_3"
               OpName %continue_execution "continue_execution"
               OpName %main "main"
               OpName %i "i"
               OpMemberDecorate %tint_symbol_1 0 Offset 0
               OpDecorate %tint_symbol_1 Block
               OpDecorate %1 DescriptorSet 0
               OpDecorate %1 Binding 0
               OpDecorate %1 Coherent
               OpMemberDecorate %tint_symbol_3 0 Offset 0
               OpDecorate %tint_symbol_3 Block
               OpDecorate %5 DescriptorSet 0
               OpDecorate %5 Binding 1
               OpDecorate %5 Coherent
        %int = OpTypeInt 32 1
%tint_symbol_1 = OpTypeStruct %int
%_ptr_StorageBuffer_tint_symbol_1 = OpTypePointer StorageBuffer %tint_symbol_1
          %1 = OpVariable %_ptr_StorageBuffer_tint_symbol_1 StorageBuffer
      %float = OpTypeFloat 32
%tint_symbol_3 = OpTypeStruct %float
%_ptr_StorageBuffer_tint_symbol_3 = OpTypePointer StorageBuffer %tint_symbol_3
          %5 = OpVariable %_ptr_StorageBuffer_tint_symbol_3 StorageBuffer
       %bool = OpTypeBool
%_ptr_Private_bool = OpTypePointer Private %bool
       %true = OpConstantTrue %bool
%continue_execution = OpVariable %_ptr_Private_bool Private %true
       %void = OpTypeVoid
         %15 = OpTypeFunction %void
%_ptr_StorageBuffer_int = OpTypePointer StorageBuffer %int
       %uint = OpTypeInt 32 0
     %uint_0 = OpConstant %uint 0
      %int_0 = OpConstant %int 0
      %false = OpConstantFalse %bool
    %float_1 = OpConstant %float 1
%_ptr_StorageBuffer_float = OpTypePointer StorageBuffer %float
    %float_0 = OpConstant %float 0
%_ptr_Function_int = OpTypePointer Function %int
      %int_1 = OpConstant %int 1
      %int_5 = OpConstant %int 5
       %main = OpFunction %void None %15
         %16 = OpLabel
          %i = OpVariable %_ptr_Function_int Function
         %17 = OpAccessChain %_ptr_StorageBuffer_int %1 %uint_0
         %21 = OpLoad %int %17 None
         %22 = OpSLessThan %bool %21 %int_0
               OpSelectionMerge %24 None
               OpBranchConditional %22 %25 %24
         %25 = OpLabel
               OpStore %continue_execution %false None
               OpBranch %24
         %24 = OpLabel
         %27 = OpDPdx %float %float_1
         %29 = OpAccessChain %_ptr_StorageBuffer_float %5 %uint_0
         %31 = OpLoad %bool %continue_execution None
               OpSelectionMerge %32 None
               OpBranchConditional %31 %33 %32
         %33 = OpLabel
               OpStore %29 %27 None
               OpBranch %32
         %32 = OpLabel
         %34 = OpAccessChain %_ptr_StorageBuffer_float %5 %uint_0
         %35 = OpLoad %float %34 None
         %36 = OpFOrdLessThan %bool %35 %float_0
               OpSelectionMerge %38 None
               OpBranchConditional %36 %39 %38
         %39 = OpLabel
               OpStore %i %int_0
               OpBranch %44
         %44 = OpLabel
               OpLoopMerge %45 %43 None
               OpBranch %42
         %42 = OpLabel
         %46 = OpAccessChain %_ptr_StorageBuffer_float %5 %uint_0
         %47 = OpLoad %float %46 None
         %48 = OpLoad %int %i None
         %49 = OpConvertSToF %float %48
         %50 = OpFOrdGreaterThan %bool %47 %49
               OpSelectionMerge %51 None
               OpBranchConditional %50 %52 %51
         %52 = OpLabel
         %53 = OpLoad %int %i None
         %54 = OpConvertSToF %float %53
         %55 = OpAccessChain %_ptr_StorageBuffer_float %5 %uint_0
         %56 = OpLoad %bool %continue_execution None
               OpSelectionMerge %57 None
               OpBranchConditional %56 %58 %57
         %58 = OpLabel
               OpStore %55 %54 None
               OpBranch %57
         %57 = OpLabel
         %59 = OpLoad %bool %continue_execution None
         %60 = OpLogicalNot %bool %59
               OpSelectionMerge %61 None
               OpBranchConditional %60 %62 %61
         %62 = OpLabel
               OpKill
         %61 = OpLabel
               OpReturn
         %51 = OpLabel
               OpBranch %43
         %43 = OpLabel
         %63 = OpLoad %int %i None
         %64 = OpIAdd %int %63 %int_1
               OpStore %i %64 None
         %66 = OpLoad %int %i None
         %67 = OpIEqual %bool %66 %int_5
               OpBranchConditional %67 %45 %44
         %45 = OpLabel
         %69 = OpLoad %bool %continue_execution None
         %70 = OpLogicalNot %bool %69
               OpSelectionMerge %71 None
               OpBranchConditional %70 %72 %71
         %72 = OpLabel
               OpKill
         %71 = OpLabel
               OpReturn
         %38 = OpLabel
         %73 = OpLoad %bool %continue_execution None
         %74 = OpLogicalNot %bool %73
               OpSelectionMerge %75 None
               OpBranchConditional %74 %76 %75
         %76 = OpLabel
               OpKill
         %75 = OpLabel
               OpReturn
               OpFunctionEnd
