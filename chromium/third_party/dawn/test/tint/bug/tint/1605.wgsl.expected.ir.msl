#include <metal_stdlib>
using namespace metal;

struct tint_module_vars_struct {
  const constant int* b;
};

#define TINT_ISOLATE_UB(VOLATILE_NAME) \
  volatile bool VOLATILE_NAME = true; \
  if (VOLATILE_NAME)

bool func_3(tint_module_vars_struct tint_module_vars) {
  {
    int i = 0;
    TINT_ISOLATE_UB(tint_volatile_true) while(true) {
      if ((i < (*tint_module_vars.b))) {
      } else {
        break;
      }
      {
        int j = -1;
        TINT_ISOLATE_UB(tint_volatile_true_1) while(true) {
          if ((j == 1)) {
          } else {
            break;
          }
          return false;
        }
      }
      {
        i = as_type<int>((as_type<uint>(i) + as_type<uint>(1)));
      }
      continue;
    }
  }
  return false;
}

kernel void tint_symbol(const constant int* b [[buffer(0)]]) {
  tint_module_vars_struct const tint_module_vars = tint_module_vars_struct{.b=b};
  func_3(tint_module_vars);
}
