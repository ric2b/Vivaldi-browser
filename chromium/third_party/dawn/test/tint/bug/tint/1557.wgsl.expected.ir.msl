#include <metal_stdlib>
using namespace metal;

#define TINT_ISOLATE_UB(VOLATILE_NAME) \
  volatile bool VOLATILE_NAME = true; \
  if (VOLATILE_NAME)

struct tint_module_vars_struct {
  const constant int* u;
};

int f() {
  return 0;
}

void g() {
  int j = 0;
  {
    TINT_ISOLATE_UB(tint_volatile_true) while(true) {
      if ((j >= 1)) {
        break;
      }
      j = as_type<int>((as_type<uint>(j) + as_type<uint>(1)));
      int k = f();
      {
      }
      continue;
    }
  }
}

kernel void tint_symbol(const constant int* u [[buffer(0)]]) {
  tint_module_vars_struct const tint_module_vars = tint_module_vars_struct{.u=u};
  switch((*tint_module_vars.u)) {
    case 0:
    {
      switch((*tint_module_vars.u)) {
        case 0:
        {
          break;
        }
        default:
        {
          g();
          break;
        }
      }
      break;
    }
    default:
    {
      break;
    }
  }
}
