# Sign the Vialdi IOS App

import("//ios/build/chrome_build.gni")
import("//vivaldi/gn/config/signer_features.gni")

vivaldi_app = "$root_out_dir/Vivaldi.app"
vivaldi_profiles = "${vivaldi_app}/PlugIns"

template("sign_bundle") {
  action(target_name) {
    script = "//build/config/apple/codesign.py"
    args = [
      "code-sign-bundle",
      "-t=iphoneos",
      "--identity", vivaldi_signing_id,
      "--binary", rebase_path(invoker.binary),
      rebase_path(invoker.app),
    ]
    if (defined(invoker.entitlements)){
      args += [ "--entitlements", rebase_path(invoker.entitlements)]
    }
    if (defined(invoker.plists)){
      if (defined(invoker.plist_compiler)) {
        args += [ "--plist-compiler-path", rebase_path(invoker.plist_compiler), ]
      } else {
        args += [ "--plist-compiler-path", rebase_path("//build/apple/plist_util.py"), ]
      }
      foreach(plist, invoker.plists) {
        args += [
          "--partial-info-plist", rebase_path(plist),
        ]
      }
    }
    if (defined(invoker.extra_args)) {
      args += invoker.extra_args
    }
    outputs = [
      "$target_gen_dir/$target_name.signed.stamp"
    ]
    deps = []
    if (defined(invoker.deps)) {
      deps += invoker.deps
    }
  }
}

sign_bundle("sign_open_extension") {
  bindir = "$root_out_dir/ios_clang_arm64_app_ext/obj/ios/chrome/open_extension/appex"
  gendir = "$root_out_dir/ios_clang_arm64_app_ext/gen/ios/chrome/open_extension/appex"

  binary = "$bindir/open_extension"
  entitlements = "$gendir/open_extension.appex.entitlements"
  app = "${vivaldi_profiles}/open_extension.appex"
  plists =[
    "$gendir/appex_generate_info_plist.plist",
    "$gendir/appex_partial_info.plist",
  ]
}

sign_bundle("sign_credential_provider_extension") {
  bindir = "$root_out_dir/ios_clang_arm64_app_ext/obj/ios/chrome/credential_provider_extension/appex"
  gendir = "$root_out_dir/ios_clang_arm64_app_ext/gen/ios/chrome/credential_provider_extension/appex"

  binary = "$bindir/credential_provider_extension"
  entitlements = "$gendir/credential_provider_extension.appex.entitlements"
  app = "${vivaldi_profiles}/credential_provider_extension.appex"
  plists =[
    "$gendir/appex_generate_info_plist.plist",
    "$gendir/appex_partial_info.plist",
  ]
}

sign_bundle("sign_intents_extension") {
  bindir = "$root_out_dir/ios_clang_arm64_app_ext/obj/ios/chrome/intents_extension/appex"
  gendir = "$root_out_dir/ios_clang_arm64_app_ext/gen/ios/chrome/intents_extension/appex"

  binary = "$bindir/intents_extension"
  entitlements = "$gendir/intents_extension.appex.entitlements"
  app = "${vivaldi_profiles}/intents_extension.appex"
  plists =[
    "$gendir/appex_generate_info_plist.plist",
    "$gendir/appex_partial_info.plist",
  ]
}

sign_bundle("sign_share_extension") {
  bindir = "$root_out_dir/ios_clang_arm64_app_ext/obj/ios/chrome/share_extension/appex"
  gendir = "$root_out_dir/ios_clang_arm64_app_ext/gen/ios/chrome/share_extension/appex"

  binary = "$bindir/share_extension"
  entitlements = "$gendir/share_extension.appex.entitlements"
  app = "${vivaldi_profiles}/share_extension.appex"
  plists =[
    "$gendir/appex_generate_info_plist.plist",
    "$gendir/appex_partial_info.plist",
  ]
}

sign_bundle("sign_widget_kit_extension") {
  bindir = "$root_out_dir/ios_clang_arm64_app_ext/obj/ios/chrome/widget_kit_extension/appex"
  gendir = "$root_out_dir/ios_clang_arm64_app_ext/gen/ios/chrome/widget_kit_extension/appex"

  binary = "$bindir/widget_kit_extension"
  entitlements = "$gendir/widget_kit_extension.appex.entitlements"
  app = "${vivaldi_profiles}/widget_kit_extension.appex"
  plists =[
    "$gendir/appex_generate_info_plist.plist",
    "$gendir/appex_partial_info.plist",
  ]
}

if (ios_enable_content_widget_extension) {
  sign_bundle("sign_content_widget_extension") {
    bindir = "$root_out_dir/ios_clang_arm64_app_ext_13_4/obj/ios/chrome/content_widget_extension/appex"
    gendir = "$root_out_dir/ios_clang_arm64_app_ext_13_4/gen/ios/chrome/content_widget_extension/appex"

    binary = "$bindir/content_widget_extension"
    entitlements = "$gendir/content_widget_extension.appex.entitlements"
    app = "${vivaldi_profiles}/content_widget_extension.appex"
    plists =[
      "$gendir/appex_generate_info_plist.plist",
      "$gendir/appex_partial_info.plist",
    ]
  }
}

if (ios_enable_search_widget_extension) {
  sign_bundle("sign_search_widget_extension") {
    bindir = "$root_out_dir/ios_clang_arm64_app_ext_13_4/obj/ios/chrome/search_widget_extension/appex"
    gendir = "$root_out_dir/ios_clang_arm64_app_ext_13_4/gen/ios/chrome/search_widget_extension/appex"

    binary = "$bindir/search_widget_extension"
    entitlements = "$gendir/search_widget_extension.appex.entitlements"
    app = "${vivaldi_profiles}/search_widget_extension.appex"
    plists =[
      "$gendir/appex_generate_info_plist.plist",
      "$gendir/appex_partial_info.plist",
    ]
  }
}

sign_bundle("sign_push_notification_service_extension") {
  bindir = "$root_out_dir/ios_clang_arm64_app_ext/obj/ios/chrome/push_notification_service_extension/appex"
  gendir = "$root_out_dir/ios_clang_arm64_app_ext/gen/ios/chrome/push_notification_service_extension/appex"

  binary = "$bindir/push_notification_service_extension"
  entitlements = "$gendir/push_notification_service_extension.appex.entitlements"
  app = "${vivaldi_profiles}/push_notification_service_extension.appex"
  plists =[
    "$gendir/appex_generate_info_plist.plist",
    "$gendir/appex_partial_info.plist",
  ]
}

sign_bundle("sign_MaterialComponents") {
  bindir = "$root_out_dir/obj/ios/third_party/material_components_ios"

  binary = "$bindir/MaterialComponents"
  extra_args = ["--disable-embedded-mobileprovision"]
  app = "${vivaldi_app}/Frameworks/MaterialComponents.framework"
}

action("sign_Lottie") {
  script = "//build/config/apple/codesign.py"

  bindir = "$root_out_dir/Vivaldi.app/Frameworks/Lottie.framework"
  binary = "$bindir/Lottie"

  args = [
    "code-sign-file",
    rebase_path(binary),
    "--identity", vivaldi_signing_id,
  ]

  outputs = [
    "$target_gen_dir/$target_name.signed.stamp"
  ]
  if (!is_full_signer) {
    deps = [
      "//vivaldi/thirdparty:copy_lottie_framework",
    ]
  }
}

sign_bundle("sign_ios") {
  bindir = "$root_out_dir/obj/ios/chrome/app"
  gendir = "$root_out_dir/gen/ios/chrome/app"

  app = vivaldi_app
  binary = "$bindir/Vivaldi"
  entitlements = "$gendir/Vivaldi.entitlements"
  plists = [
    "$gendir/chrome_generate_info_plist.plist",
    "$gendir/chrome_partial_info.plist",
  ]
  deps = [
    ":sign_Lottie",
    ":sign_MaterialComponents",
    ":sign_open_extension",
    ":sign_credential_provider_extension",
    ":sign_widget_kit_extension",
    ":sign_intents_extension",
    ":sign_share_extension",
    ":sign_push_notification_service_extension",
  ]

  if (ios_enable_content_widget_extension) {
    deps += [
      ":sign_content_widget_extension",
    ]
  }

  if (ios_enable_search_widget_extension) {
    deps += [
      ":sign_search_widget_extension",
    ]
  }
}
