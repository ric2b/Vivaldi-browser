import("//vivaldi/gn/config/features.gni")

import("//chromium/build/config/features.gni")

import("//build/config/ui.gni")

config("delay_load_mf") {
  ldflags = [
    "/DELAYLOAD:mfplat.dll",
  ]
}

config("api_keys") {
  defines = []
  if (vivaldi_task_api_key != "") {
    defines += [
      "VIVALDI_GOOGLE_TASKS_API_KEY=\"$vivaldi_task_api_key\""
    ]
  }

  if (vivaldi_oauth_client_id != "") {
    defines += [
      "VIVALDI_GOOGLE_OAUTH_API_CLIENT_ID=\"$vivaldi_oauth_client_id\""
    ]
  }

  if (vivaldi_oauth_client_secret != "") {
    defines += [
      "VIVALDI_GOOGLE_OAUTH_API_CLIENT_SECRET=\"$vivaldi_oauth_client_secret\""
    ]
  }

  if (vivaldi_microsoft_oauth_client_id != "") {
    defines += [
      "VIVALDI_MICROSOFT_OAUTH_API_CLIENT_ID=\"$vivaldi_microsoft_oauth_client_id\""
    ]
  }

  if (vivaldi_yahoo_oauth_client_id != "") {
    defines += [
      "VIVALDI_YAHOO_OAUTH_API_CLIENT_ID=\"$vivaldi_yahoo_oauth_client_id\""
    ]
  }

  if (vivaldi_yahoo_oauth_client_secret != "") {
    defines += [
      "VIVALDI_YAHOO_OAUTH_API_CLIENT_SECRET=\"$vivaldi_yahoo_oauth_client_secret\""
    ]
  }

  if (vivaldi_aol_oauth_client_id != "") {
    defines += [
      "VIVALDI_AOL_OAUTH_API_CLIENT_ID=\"$vivaldi_aol_oauth_client_id\""
    ]
  }

  if (vivaldi_aol_oauth_client_secret != "") {
    defines += [
      "VIVALDI_AOL_OAUTH_API_CLIENT_SECRET=\"$vivaldi_aol_oauth_client_secret\""
    ]
  }

  if (vivaldi_net_oauth_client_secret != "") {
    defines += [
      "VIVALDI_NET_OAUTH_CLIENT_SECRET=\"$vivaldi_net_oauth_client_secret\""
    ]
  }

  if (vivaldi_net_oauth_client_id != "") {
    defines += [
      "VIVALDI_NET_OAUTH_CLIENT_ID=\"$vivaldi_net_oauth_client_id\""
    ]
  }

  if (vivaldi_fastmail_oauth_client_id != "") {
    defines += [
      "VIVALDI_FASTMAIL_OAUTH_CLIENT_ID=\"$vivaldi_fastmail_oauth_client_id\""
    ]
  }
}

static_library("apis") {
  public_deps = [
    "//chrome/common:mojo_bindings",
    "//components/favicon/core",
  ]
  deps = [
    "//apps:apps",
    "//base:base",
    "//chrome/app:command_ids",
    "//chrome/app/theme:theme_resources",
    "//chrome/browser/devtools",
    "//chrome/browser/extensions",
    "//chrome/browser/media/router",
    "//chrome/common:buildflags",
    "//chrome/common/apps/platform_apps",
    "//chrome/common/extensions/api",
    "//components/autofill/core/common",
    "//components/bookmarks/browser",
    "//components/browser_sync",
    "//components/infobars/core",
    "//components/javascript_dialogs",
    "//components/keep_alive_registry",
    "//components/keyed_service/content",
    "//components/language/core/browser",
    "//components/media_router/common/mojom:media_router",
    "//components/password_manager/core/browser",
    "//components/permissions",
    "//components/pref_registry",
    "//components/qr_code_generator:bitmap_generator",
    "//components/sessions",
    "//components/search_engines",
    "//components/sync",
    "//components/sync_device_info",
    "//components/version_info",
    "//components/web_modal",
    "//components/zoom",
    #"//content/browser",
    "//content/public/browser",

    #"//content/public/common",
    "//extensions/browser",
    "//printing/buildflags",
    "//skia:skia",
    "//third_party/blink/public:blink_headers",
    #"//third_party/blink/renderer/platform",
    "//ui/shell_dialogs",
    "//ui/views",
    "//vivaldi/browser:default_bookmarks",
    "//vivaldi/calendar",
    "//vivaldi/components/datasource:resource_reader",
    "//vivaldi/components/request_filter/adblock_filter",
    "//vivaldi/contact",
    "//vivaldi/extensions/helper",
    "//vivaldi/extensions/helper:app_helper",
    "//vivaldi/extensions/schema",
    "//vivaldi/extensions/tools",
    "//vivaldi/menus",
    "//vivaldi/components/notes",
    "//vivaldi/components/notes:browser",
    "//vivaldi/prefs",
    "//vivaldi/prefs:browser_prefs",
    "//vivaldi/prefs:prefs_files_generator",
    "//vivaldi/prefs:prefs_strings",
    "//vivaldi/renderer/mojo:frame_service",
    "//vivaldi/ui",
    "//vivaldi/ui:skia_utils",
    "//vivaldi/vivaldi_account",
  ]
  allow_circular_includes_from = [
    "//chrome/browser/extensions",
    "//vivaldi/extensions/helper:app_helper",
    "//vivaldi/extensions/tools",
  ]
  # Needed for media support detection in vivaldi.utilities
  if (is_win) {
    libs = [
      "mfplat.lib",
    ]
    # MediaFoundation is not available on Windows N, so must be delay loaded.
    all_dependent_configs = [ ":delay_load_mf" ]
  }

  sources = [
    "access_keys/access_keys_api.cc",
    "access_keys/access_keys_api.h",
    "auto_update/auto_update_api.cc",
    "auto_update/auto_update_api.h",
    "auto_update/auto_update_status.h",
    "bookmark_context_menu/bookmark_context_menu_api.cc",
    "bookmark_context_menu/bookmark_context_menu_api.h",
    "bookmarks/bookmarks_private_api.cc",
    "bookmarks/bookmarks_private_api.h",
    "calendar/calendar_api.cc",
    "calendar/calendar_api.h",
    "contacts/contacts_api.cc",
    "contacts/contacts_api.h",
    "content_blocking/content_blocking_api.cc",
    "content_blocking/content_blocking_api.h",
    "context_menu/context_menu_api.cc",
    "context_menu/context_menu_api.h",
    "devtools/devtools_private_api.cc",
    "devtools/devtools_private_api.h",
    "editcommand/editcommand_api.cc",
    "editcommand/editcommand_api.h",
    "events/vivaldi_ui_events.cc",
    "events/vivaldi_ui_events.h",
    "extension_action_utils/extension_action_utils_api.cc",
    "extension_action_utils/extension_action_utils_api.h",
    "extension_action_utils/vivaldi_extension_host.cc",
    "extension_action_utils/vivaldi_extension_host.h",
    "guest_view/vivaldi_web_view_constants.cpp",
    "guest_view/vivaldi_web_view_constants.h",
    "guest_view/web_view_private_api.cpp",
    "guest_view/web_view_private_api.h",
    "history/history_private_api.cc",
    "history/history_private_api.h",
    "omnibox/omnibox_private_api.cc",
    "omnibox/omnibox_private_api.h",
    "import_data/import_data_api.cc",
    "import_data/import_data_api.h",
    "infobars/infobars_api.cc",
    "infobars/infobars_api.h",
    "mail/mail_private_api.cc",
    "mail/mail_private_api.h",
    "menu_content/menu_content_api.cc",
    "menu_content/menu_content_api.h",
    "menubar/menubar_api.cc",
    "menubar/menubar_api.h",
    "menubar_menu/menubar_menu_api.cc",
    "menubar_menu/menubar_menu_api.h",
    "notes/notes_api.cc",
    "notes/notes_api.h",
    "page_actions/page_actions_api.cc",
    "page_actions/page_actions_api.h",
    "pip_private/pip_private_api.cc",
    "pip_private/pip_private_api.h",
    "prefs/prefs_api.cc",
    "prefs/prefs_api.h",
    "reading_list/reading_list_api.cc",
    "reading_list/reading_list_api.h",
    "runtime/runtime_api.cpp",
    "runtime/runtime_api.h",
    "savedpasswords/password_list_sorter.cc",
    "savedpasswords/password_list_sorter.h",
    "savedpasswords/savedpasswords_api.cc",
    "savedpasswords/savedpasswords_api.h",
    "search_engines/search_engines_api.cc",
    "search_engines/search_engines_api.h",
    "sessions/vivaldi_sessions_api.cc",
    "sessions/vivaldi_sessions_api.h",
    "settings/settings_api.cc",
    "settings/settings_api.h",
    "sync/sync_api.cc",
    "sync/sync_api.h",
    "tabs/tabs_private_api.cc",
    "tabs/tabs_private_api.h",
    "theme/theme_private_api.cc",
    "theme/theme_private_api.h",
    "thumbnails/thumbnails_api.cc",
    "thumbnails/thumbnails_api.h",
    "translate_history/translate_history_api.cc",
    "translate_history/translate_history_api.h",
    "vivaldi_account/vivaldi_account_api.cc",
    "vivaldi_account/vivaldi_account_api.h",
    "vivaldi_utilities/drag_download_items.h",
    "vivaldi_utilities/vivaldi_utilities_api.cc",
    "vivaldi_utilities/vivaldi_utilities_api.h",
    "window/window_private_api.cc",
    "window/window_private_api.h",
    "zoom/zoom_api.cc",
    "zoom/zoom_api.h",
  ]

  if (is_linux) {
    sources += [
      "auto_update/auto_update_api_linux.cc",
      "vivaldi_utilities/vivaldi_utilities_api_linux.cc",
      "window/window_private_api_linux.cc",
      "vivaldi_utilities/launch_bar_gnome_support.cc",
      "vivaldi_utilities/launch_bar_gnome_support.h",
    ]

    if (use_gio) {
      configs += [ "//build/linux:gio_config" ]
    }
  }
  if (is_mac) {
    sources += [
      "auto_update/auto_update_api_mac.mm",
      "vivaldi_utilities/drag_download_items_mac.mm",
      "vivaldi_utilities/vivaldi_utilities_api_mac.mm",
      "window/window_private_api_mac.mm",
    ]
  }
  if (is_win) {
    sources += [
      "auto_update/auto_update_api_win.cc",
      "vivaldi_utilities/vivaldi_utilities_api_win.cc",
      "window/window_private_api_win.cc",
    ]
  }
  if (use_aura) {
    sources += [
      "vivaldi_utilities/drag_download_items_aura.cc",
    ]
  }
  configs += [
    ":api_keys",
  ]
}
