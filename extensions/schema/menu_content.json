// Copyright (c) 2020 Vivaldi Technologies AS. All rights reserved

[
  {
    "namespace": "menuContent",
    "description": "Use the <code>vivaldi.menuContent</code> API to configure menus.",
    "types": [
      {
        "id": "NodeType",
        "type": "string",
        "description": "Defines supported nodes",
        "enum": [ "menu", "command", "checkbox", "radio", "folder", "separator", "container" ]
      },
      {
        "id": "Role",
        "type": "string",
        "description": "Defines menu type.",
        "enum": [ "horizontal", "vertical", "mac", "context"]
      },
      {
        "id": "ContainerMode",
        "type": "string",
        "description": "Defines container layouts.",
        "enum": [ "inline", "folder"]
      },
      {
        "id": "ContainerEdge",
        "type": "string",
        "description": "Defines on what edge of a container additional items can be added.",
        "enum": [ "above", "below", "off"]
      },
      {
        "id": "MenuTreeNode",
        "type": "object",
        "description": "A node (folder or menu entry) in the menu tree. Child nodes are ordered within their parent folder.",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier."
          },
          "type": {
            "$ref": "NodeType",
            "description": "The kind of node."
          },
          "action": {
            "type": "string",
            "description": "A command or a menu identifier. It does not have to be unique. Can be empty for separators."
          },
          "custom": {
            "type": "boolean",
            "optional": true,
            "description": "When true, the item has been added by the user."
          },
          "title": {
            "type": "string",
            "optional": true,
            "description": "Node title. If not present the title is determined using the action."
          },
          "showshortcut": {
            "type": "boolean",
            "optional": true,
            "description": "Show shortcut string."
          },
          "radiogroup": {
            "type": "string",
            "optional": true,
            "description": "Mandatory for radio elements."
          },
          "containermode": {
            "$ref": "ContainerMode",
            "optional": true,
            "description": "Mandatory for container elements."
          },
          "containeredge": {
            "$ref": "ContainerEdge",
            "optional": true,
            "description": "Mandatory for container elements."
          },
          "parameter": {
            "type": "string",
            "optional": true,
            "description": "Free form parameter. Format varies with action."
          },
          "children": {
            "type": "array",
            "optional": true,
            "items": { "$ref": "MenuTreeNode" },
            "description": "An ordered list of children of this node."
          }
        }
      }
    ],
    "functions": [
      {
        "name": "get",
        "type": "function",
        "description": "Retrieves content of a menu.",
        "parameters": [
          {
            "name": "menu",
            "type": "string",
            "description": "Menu resource name."
          }
        ],
        "returns_async": {
          "name": "callback",
          "does_not_support_promises": "vivaldi",
          "parameters": [
            {
              "name": "id",
              "type": "string",
              "description": "Root id of the menu."
            },
            {
              "name": "role",
              "$ref": "Role",
              "description": "Describes how the menu can be used."
            },
            {
              "name": "result",
              "type": "array",
              "items": { "$ref": "MenuTreeNode" }
            }
          ]
        }
      },
      {
        "name": "move",
        "type": "function",
        "description": "Moves one or more items within a menu.",
        "parameters": [
          {
            "name": "menu",
            "type": "string",
            "description": "Menu resource name."
          },
          {
            "name": "ids",
            "type": "array",
            "items": { "type": "string" }
          },
          {
            "name": "parentId",
            "type": "string"
          },
          {
            "name": "index",
            "type": "integer"
          }
        ],
        "returns_async": {
          "name": "callback",
          "parameters": [
            {
              "name": "result",
              "type": "boolean"
            }
          ]
        }
      },
      {
        "name": "create",
        "type": "function",
        "description": "Add one or more items within a menu.",
        "parameters": [
          {
            "name": "menu",
            "type": "string",
            "description": "Menu resource name."
          },
          {
            "name": "parentId",
            "type": "string"
          },
          {
            "name": "index",
            "type": "integer",
            "description": "Where to add elements. A negative value means at end."
          },
          {
            "name": "items",
            "type": "array",
            "items": { "$ref": "MenuTreeNode" }
          }
        ],
        "returns_async": {
          "name": "callback",
          "does_not_support_promises": "vivaldi",
          "parameters": [
            {
              "name": "result",
              "type": "boolean"
            },
            {
              "name": "ids",
              "type": "array",
              "items": { "type": "string" }
            }
          ]
        }
      },
      {
        "name": "remove",
        "type": "function",
        "description": "Deletes one or more items within a menu.",
        "parameters": [
          {
            "name": "menu",
            "type": "string",
            "description": "Menu resource name."
          },
          {
            "name": "ids",
            "type": "array",
            "items": { "type": "string" }
          }
        ],
        "returns_async": {
          "name": "callback",
          "parameters": [
            {
              "name": "result",
              "type": "boolean"
            }
          ]
        }
      },
      {
        "name": "removeAction",
        "type": "function",
        "description": "Deletes one or more actions from all models",
        "parameters": [
          {
            "name": "actions",
            "type": "array",
            "items": { "type": "string" }
          }
        ],
        "returns_async": {
          "name": "callback",
          "parameters": [
            {
              "name": "result",
              "type": "boolean"
            }
          ]
        }
      },
      {
        "name": "update",
        "type": "function",
        "description": "Updates the properties of a node.",
        "parameters": [
          {
            "name": "menu",
            "type": "string",
            "description": "Menu resource name."
          },
          {
            "name": "id",
            "type": "string"
          },
          {
            "type": "object",
            "name": "changes",
            "properties": {
              "title": {
                "type": "string",
                "optional": true
              },
              "parameter": {
                "type": "string",
                "optional": true
              },
              "showshortcut": {
                "type": "boolean",
                "optional": true
              },
              "containerMode": {
                "$ref": "ContainerMode",
                "optional": true
              },
              "containerEdge": {
                "$ref": "ContainerEdge",
                "optional": true
              }
            }
          }
        ],
        "returns_async": {
          "name": "callback",
          "parameters": [
            {
              "name": "result",
              "type": "boolean"
            }
          ]
        }
      },
      {
        "name": "reset",
        "type": "function",
        "description": "Restores default content within a menu or in a submenu of that menu.",
        "parameters": [
          {
            "name": "menu",
            "type": "string",
            "description": "Menu resource name."
          },
          {
            "name": "isContext",
            "type": "boolean"
          },
          {
            "name": "ids",
            "type": "array",
            "items": { "type": "string" },
            "optional": true
          }
        ],
        "returns_async": {
          "name": "callback",
          "parameters": [
            {
              "name": "result",
              "type": "boolean"
            }
          ]
        }
      },
      {
        "name": "resetAll",
        "type": "function",
        "description": "Restores default content for all menus (either context or main menus).",
        "parameters": [
          {
            "name": "isContext",
            "type": "boolean"
          }
        ],
        "returns_async": {
          "name": "callback",
          "parameters": [
            {
              "name": "result",
              "type": "boolean"
            }
          ]
        }
      }
    ],
    "events": [
      {
        "name": "onChanged",
        "type": "function",
        "description": "Fires when the content of a menu has changed.",
        "parameters": [
          {
            "name": "menu",
            "type": "string",
            "description": "Menu resource name."
          },
          {
            "name": "id",
            "type": "string",
            "description": "Unique identifier for menu."
          },
          {
              "name": "role",
              "$ref": "Role",
              "description": "Describes the role of menu."
          },
          {
            "name": "selectId",
            "type": "string",
            "description": "If non-negative this id can be used to set selected element."
          },
          {
            "name": "items",
            "type": "array",
            "items": { "$ref": "MenuTreeNode" }
          }
        ]
      },
      {
        "name": "onResetAll",
        "type": "function",
        "description": "Fires when the entire menu tree is reset.",
        "parameters": [
          {
            "name": "isContext",
            "type": "boolean",
            "description": "True for a context menu tree, false for a main menu tree."
          }
        ]
      }
    ]
  }
]
